# Load libraries
library(tidyverse)
options(scipen = 999)

# Load data
ss_data <- read_csv("input_data/ss_data.csv")

# This is uploading the raw data and converting the dollar values (everything except IDs and enrollment)
# into inflation adjusted dollars. The CPI data is from FRED's reporting of CPI for all urban consumers from
# BLS. The CPI data is averaged from July to June to replicate the fiscal year.

# WHAT IS WORTH CHECKING:
#   1. Is the CPI data correct?
#   2. Is the inflation adjustment calculation correct?

# Adjust data by "CPI (Average of July to June)"
ss_data_cpi <- ss_data |>
    filter(State != "District of Columbia") |>
    arrange(State, Year) |>
    group_by(State) |>
    mutate(`Total Revenue` = `Total Revenue` * last(`CPI (Average of July to June)`) / `CPI (Average of July to June)`) |>
    mutate(`Total Revenue - Per Pupil` = `Total Revenue - Per Pupil` * last(`CPI (Average of July to June)`) / `CPI (Average of July to June)`) |>
    mutate(`Federal Revenue` = `Federal Revenue` * last(`CPI (Average of July to June)`) / `CPI (Average of July to June)`) |>
    mutate(`Federal Revenue - Per Pupil` = `Federal Revenue - Per Pupil` * last(`CPI (Average of July to June)`) / `CPI (Average of July to June)`) |>
    mutate(`State Revenue` = `State Revenue` * last(`CPI (Average of July to June)`) / `CPI (Average of July to June)`) |>
    mutate(`State Revenue - Per Pupil` = `State Revenue - Per Pupil` * last(`CPI (Average of July to June)`) / `CPI (Average of July to June)`) |>
    mutate(`Local Revenue` = `Local Revenue` * last(`CPI (Average of July to June)`) / `CPI (Average of July to June)`) |>
    mutate(`Local Revenue - Per Pupil` = `Local Revenue - Per Pupil` * last(`CPI (Average of July to June)`) / `CPI (Average of July to June)`) |>
    mutate(`Current Spending` = `Current Spending` * last(`CPI (Average of July to June)`) / `CPI (Average of July to June)`) |>
    mutate(`Current Spending - Per Pupil` = `Current Spending - Per Pupil` * last(`CPI (Average of July to June)`) / `CPI (Average of July to June)`) |>
    mutate(`Total Salary` = `Total Salary` * last(`CPI (Average of July to June)`) / `CPI (Average of July to June)`) |>
    mutate(`Total Salary - Per Pupil` = `Total Salary - Per Pupil` * last(`CPI (Average of July to June)`) / `CPI (Average of July to June)`) |>
    mutate(`Total Benefits` = `Total Benefits` * last(`CPI (Average of July to June)`) / `CPI (Average of July to June)`) |>
    mutate(`Total Benefits - Per Pupil` = `Total Benefits - Per Pupil` * last(`CPI (Average of July to June)`) / `CPI (Average of July to June)`) |>
    mutate(`All Instruction` = `All Instruction` * last(`CPI (Average of July to June)`) / `CPI (Average of July to June)`) |>
    mutate(`All Instruction - Per Pupil` = `All Instruction - Per Pupil` * last(`CPI (Average of July to June)`) / `CPI (Average of July to June)`) |>
    mutate(`Instructional Staff - Salary` = `Instructional Staff - Salary` * last(`CPI (Average of July to June)`) / `CPI (Average of July to June)`) |>
    mutate(`Instructional Staff - Salary - Per Pupil` = `Instructional Staff - Salary - Per Pupil` * last(`CPI (Average of July to June)`) / `CPI (Average of July to June)`) |>
    mutate(`Instructional Staff - Benefits` = `Instructional Staff - Benefits` * last(`CPI (Average of July to June)`) / `CPI (Average of July to June)`) |>
    mutate(`Instructional Staff - Benefits - Per Pupil` = `Instructional Staff - Benefits - Per Pupil` * last(`CPI (Average of July to June)`) / `CPI (Average of July to June)`) |>
    mutate(`All Support Services` = `All Support Services` * last(`CPI (Average of July to June)`) / `CPI (Average of July to June)`) |>
    mutate(`All Support Services - Per Pupil` = `All Support Services - Per Pupil` * last(`CPI (Average of July to June)`) / `CPI (Average of July to June)`) |>
    mutate(`Support Services Staff - Salary` = `Support Services Staff - Salary` * last(`CPI (Average of July to June)`) / `CPI (Average of July to June)`) |>
    mutate(`Support Services Staff - Salary - Per Pupil` = `Support Services Staff - Salary - Per Pupil` * last(`CPI (Average of July to June)`) / `CPI (Average of July to June)`) |>
    mutate(`Support Services Staff - Benefits` = `Support Services Staff - Benefits` * last(`CPI (Average of July to June)`) / `CPI (Average of July to June)`) |>
    mutate(`Support Services Staff - Benefits - Per Pupil` = `Support Services Staff - Benefits - Per Pupil` * last(`CPI (Average of July to June)`) / `CPI (Average of July to June)`) |>
    mutate(`Support Services - Pupil Support Services` = `Support Services - Pupil Support Services` * last(`CPI (Average of July to June)`) / `CPI (Average of July to June)`) |>
    mutate(`Support Services - Pupil Support Services - Per Pupil` = `Support Services - Pupil Support Services - Per Pupil` * last(`CPI (Average of July to June)`) / `CPI (Average of July to June)`) |>
    mutate(`Support Services - Instructional Staff` = `Support Services - Instructional Staff` * last(`CPI (Average of July to June)`) / `CPI (Average of July to June)`) |>
    mutate(`Support Services - Instructional Staff - Per Pupil` = `Support Services - Instructional Staff - Per Pupil` * last(`CPI (Average of July to June)`) / `CPI (Average of July to June)`) |>
    mutate(`Support Services - General Administration` = `Support Services - General Administration` * last(`CPI (Average of July to June)`) / `CPI (Average of July to June)`) |>
    mutate(`Support Services - General Administration - Per Pupil` = `Support Services - General Administration - Per Pupil` * last(`CPI (Average of July to June)`) / `CPI (Average of July to June)`) |>
    mutate(`Support Services - School Administration` = `Support Services - School Administration` * last(`CPI (Average of July to June)`) / `CPI (Average of July to June)`) |>
    mutate(`Support Services - School Administration - Per Pupil` = `Support Services - School Administration - Per Pupil` * last(`CPI (Average of July to June)`) / `CPI (Average of July to June)`) |>
    mutate(`Support Services - Operation & Maintenance` = `Support Services - Operation & Maintenance` * last(`CPI (Average of July to June)`) / `CPI (Average of July to June)`) |>
    mutate(`Support Services - Operation & Maintenance - Per Pupil` = `Support Services - Operation & Maintenance - Per Pupil` * last(`CPI (Average of July to June)`) / `CPI (Average of July to June)`) |>
    mutate(`Support Services - Pupil Transportation` = `Support Services - Pupil Transportation` * last(`CPI (Average of July to June)`) / `CPI (Average of July to June)`) |>
    mutate(`Support Services - Pupil Transportation - Per Pupil` = `Support Services - Pupil Transportation - Per Pupil` * last(`CPI (Average of July to June)`) / `CPI (Average of July to June)`) |>
    mutate(`Support Services - Other` = `Support Services - Other` * last(`CPI (Average of July to June)`) / `CPI (Average of July to June)`) |>
    mutate(`Support Services - Other - Per Pupil` = `Support Services - Other - Per Pupil` * last(`CPI (Average of July to June)`) / `CPI (Average of July to June)`) |>
    mutate(`Total Capital Outlays` = `Total Capital Outlays` * last(`CPI (Average of July to June)`) / `CPI (Average of July to June)`) |>
    mutate(`Total Capital Outlays - Per Pupil` = `Total Capital Outlays - Per Pupil` * last(`CPI (Average of July to June)`) / `CPI (Average of July to June)`) |>
    mutate(`Short-Term Debt` = `Short-Term Debt` * last(`CPI (Average of July to June)`) / `CPI (Average of July to June)`) |>
    mutate(`Short-Term Debt - Per Pupil` = `Short-Term Debt - Per Pupil` * last(`CPI (Average of July to June)`) / `CPI (Average of July to June)`) |>
    mutate(`Long-Term Debt` = `Long-Term Debt` * last(`CPI (Average of July to June)`) / `CPI (Average of July to June)`) |>
    mutate(`Long-Term Debt - Per Pupil` = `Long-Term Debt - Per Pupil` * last(`CPI (Average of July to June)`) / `CPI (Average of July to June)`) |>
    mutate(`Total Debt` = `Short-Term Debt` + `Long-Term Debt`) |>
    mutate(`Total Debt - Per Pupil` = `Short-Term Debt - Per Pupil` + `Long-Term Debt - Per Pupil`)


# Write CSV
write_csv(ss_data_cpi, "output_data/spending_spotlight_data_new.csv")


# Table 1: Key U.S Public School Spending, Staffing, and Enrollment Trends (2002-2020)

staffing <- read_csv("input_data/teachers_non_teachers.csv")
salary <- read_csv("input_data/salary_data.csv")

salary_pct <- salary |>
    filter(Year != 2021) |>
    filter(State != "District of Columbia") |>
    group_by(State) |>
    mutate(`Salary Adj` = `Salary` * last(CPI) / CPI)


# Create a table for the United States that compares 2002 and 2020 values for the following variables:
# From ss_data_cpi:
# 1. `Total Revenue - Per Pupil`
# 2. `Total Benefits - Per Pupil`
# 3. `Enrollment`
# From staffing:
# 4. `Teachers` + (`All staff` - `Teachers`)
# 5. (`All staff` - `Teachers`)
# 6. `Teachers`
# From salary_pct:
# 7. `Salary Adj`

intro_table_1 <- ss_data_cpi |>
    filter(Year == 2002 | Year == 2020) |>
    filter(State == "United States") |>
    select(Year, `Total Revenue - Per Pupil`, `Total Benefits - Per Pupil`, Enrollment) |>
    left_join(staffing |>
        filter(Year == 2002 | Year == 2020) |>
        filter(State == "United States") |>
        select(Year, `Teachers`, `All staff`) |>
        mutate(`Non-Teachers` = `All staff` - `Teachers`) |>
        mutate(`Total Staff` = `Teachers` + `Non-Teachers`),
    by = "Year"
    ) |>
    left_join(salary_pct |>
        filter(Year == 2002 | Year == 2020) |>
        filter(State == "United States") |>
        select(Year, `Salary Adj`),
    by = "Year"
    ) |>
    select(-State.y, -`All staff`) |>
    rename(
        `Total Revenue` = `Total Revenue - Per Pupil`,
        `Total Benefits` = `Total Benefits - Per Pupil`
    )

# Pivot intro_table_1 to long format, with the following columns: Category, 2002, 2020
intro_table_1 <- intro_table_1 |>
    pivot_longer(
        cols = c(
            `Total Revenue`,
            `Total Benefits`,
            Enrollment,
            `Total Staff`,
            `Non-Teachers`,
            `Teachers`,
            `Salary Adj`
        ),
        names_to = "Category",
        values_to = "Value"
    ) |>
    #   Pivot intro_table_1 Year wider
    pivot_wider(
        names_from = Year,
        values_from = Value
    ) |>
    select(-State.x) |>
    mutate(
        Growth_pct = (`2020` / `2002`) - 1,
        Growth_diff = `2020` - `2002`
    )


# Write intro_table_1 to CSV
write_csv(intro_table_1, "output_data/body/introduction/intro_table_1_summary.csv")


# Table 2: U.S. NAEP Score Growth by Subject
naep_math_4 <- read_csv("input_data/raw_naep/naep_4_math_ts.csv")
naep_math_8 <- read_csv("input_data/raw_naep/naep_8_math_ts.csv")
naep_reading_4 <- read_csv("input_data/raw_naep/naep_4_reading_ts.csv")
naep_reading_8 <- read_csv("input_data/raw_naep/naep_8_reading_ts.csv")


# Create a table for 4th Grade NAEP Reading Score Growth (2003-2019)
us_naep_reading_4 <- naep_reading_4 |>
    filter(Year == 2019) |>
    filter(State == "United States") |>
    select(State, `NAEP`) |>
    left_join(
        naep_reading_4 |>
            filter(Year == 2003) |>
            select(State, NAEP),
        by = "State"
    ) |>
    mutate(`Reading 4 Score Pct` = `NAEP.x` / `NAEP.y` - 1) |>
    mutate(`Reading 4 Score Diff` = `NAEP.x` - `NAEP.y`) |>
    select(State, `NAEP.x`, `NAEP.y`, `Reading 4 Score Pct`, `Reading 4 Score Diff`) |>
    rename(`Reading Score 2019` = `NAEP.x`, `Reading Score 2003` = `NAEP.y`)

# Create a table for 8th Grade NAEP Reading Score Growth (2003-2019)
us_naep_reading_8 <- naep_reading_8 |>
    filter(Year == 2019) |>
    filter(State == "United States") |>
    select(State, `NAEP`) |>
    left_join(
        naep_reading_8 |>
            filter(Year == 2003) |>
            select(State, NAEP),
        by = "State"
    ) |>
    mutate(`Reading 8 Score Pct` = `NAEP.x` / `NAEP.y` - 1) |>
    mutate(`Reading 8 Score Diff` = `NAEP.x` - `NAEP.y`) |>
    select(State, `NAEP.x`, `NAEP.y`, `Reading 8 Score Pct`, `Reading 8 Score Diff`) |>
    rename(`Reading Score 2019` = `NAEP.x`, `Reading Score 2003` = `NAEP.y`)

# Create a table for 4th Grade NAEP Math Score Growth (2003-2019)
us_naep_math_4 <- naep_math_4 |>
    filter(Year == 2019) |>
    filter(State == "United States") |>
    select(State, `NAEP`) |>
    left_join(
        naep_math_4 |>
            filter(Year == 2003) |>
            select(State, NAEP),
        by = "State"
    ) |>
    mutate(`Math 4 Score Pct` = `NAEP.x` / `NAEP.y` - 1) |>
    mutate(`Math 4 Score Diff` = `NAEP.x` - `NAEP.y`) |>
    select(State, `NAEP.x`, `NAEP.y`, `Math 4 Score Pct`, `Math 4 Score Diff`) |>
    rename(`Math Score 2019` = `NAEP.x`, `Math Score 2003` = `NAEP.y`)

# Create a table for 8th Grade NAEP Math Score Growth (2003-2019)
us_naep_math_8 <- naep_math_8 |>
    filter(Year == 2019) |>
    filter(State == "United States") |>
    select(State, `NAEP`) |>
    left_join(
        naep_math_8 |>
            filter(Year == 2003) |>
            select(State, NAEP),
        by = "State"
    ) |>
    mutate(`Math 8 Score Pct` = `NAEP.x` / `NAEP.y` - 1) |>
    mutate(`Math 8 Score Diff` = `NAEP.x` - `NAEP.y`) |>
    select(State, `NAEP.x`, `NAEP.y`, `Math 8 Score Pct`, `Math 8 Score Diff`) |>
    rename(`Math Score 2019` = `NAEP.x`, `Math Score 2003` = `NAEP.y`)


# Take us_naep_reading_4, us_naep_reading_8, us_naep_math_4, us_naep_math_8 and combine into one table
# that has the following columns: `4th Grade Reading`, `4th Grade Math`, `8th Grade Reading`, and `8th Grade Math`

us_naep <- us_naep_reading_4 |>
    left_join(us_naep_reading_8, by = "State") |>
    left_join(us_naep_math_4, by = "State") |>
    left_join(us_naep_math_8, by = "State") |>
    mutate(`Student Group` = "All") |>
    select(
        `Student Group`,
        `Reading 4 Score Pct`,
        `Reading 4 Score Diff`,
        `Reading 8 Score Pct`,
        `Reading 8 Score Diff`,
        `Math 4 Score Pct`,
        `Math 4 Score Diff`,
        `Math 8 Score Pct`,
        `Math 8 Score Diff`
    )


# Do the same for Low Income NAEP

low_income_naep_math_4 <- read_csv("input_data/raw_naep/naep_4_math_low_income_ts.csv")
low_income_naep_reading_4 <- read_csv("input_data/raw_naep/naep_4_reading_low_income_ts.csv")
low_income_naep_math_8 <- read_csv("input_data/raw_naep/naep_8_math_low_income_ts.csv")
low_income_naep_reading_8 <- read_csv("input_data/raw_naep/naep_8_reading_low_income_ts.csv")

# Create a table for 4th Grade NAEP Reading Score Growth (2003-2019) in the United States
low_income_naep_reading_4 <- low_income_naep_reading_4 |>
    filter(State == "United States") |>
    mutate(Eligible = as.numeric(NAEP))

low_income_naep_reading_4_table <- low_income_naep_reading_4 |>
    filter(Year == 2019) |>
    select(State, `Eligible`) |>
    left_join(
        low_income_naep_reading_4 |>
            filter(Year == 2003) |>
            select(State, Eligible),
        by = "State"
    ) |>
    mutate(`Reading 4 Score Pct` = `Eligible.x` / `Eligible.y` - 1) |>
    mutate(`Reading 4 Score Diff` = `Eligible.x` - `Eligible.y`) |>
    select(State, `Eligible.x`, `Eligible.y`, `Reading 4 Score Pct`, `Reading 4 Score Diff`) |>
    rename(`Reading Score 2019` = `Eligible.x`, `Reading Score 2003` = `Eligible.y`)

# Create a table for 8th Grade NAEP Reading Score Growth (2003-2019) in the United States
low_income_naep_reading_8 <- low_income_naep_reading_8 |>
    filter(State == "United States") |>
    mutate(Eligible = as.numeric(NAEP))

low_income_naep_reading_8_table <- low_income_naep_reading_8 |>
    filter(Year == 2019) |>
    select(State, `Eligible`) |>
    left_join(
        low_income_naep_reading_8 |>
            filter(Year == 2003) |>
            select(State, Eligible),
        by = "State"
    ) |>
    mutate(`Reading 8 Score Pct` = `Eligible.x` / `Eligible.y` - 1) |>
    mutate(`Reading 8 Score Diff` = `Eligible.x` - `Eligible.y`) |>
    select(State, `Eligible.x`, `Eligible.y`, `Reading 8 Score Pct`, `Reading 8 Score Diff`) |>
    rename(`Reading Score 2019` = `Eligible.x`, `Reading Score 2003` = `Eligible.y`)

# Create a table for 4th Grade NAEP Math Score Growth (2003-2019) in the United States
low_income_naep_math_4 <- low_income_naep_math_4 |>
    filter(State == "United States") |>
    mutate(Eligible = as.numeric(NAEP))

low_income_naep_math_4_table <- low_income_naep_math_4 |>
    filter(Year == 2019) |>
    select(State, `Eligible`) |>
    left_join(
        low_income_naep_math_4 |>
            filter(Year == 2003) |>
            select(State, Eligible),
        by = "State"
    ) |>
    mutate(`Math 4 Score Pct` = `Eligible.x` / `Eligible.y` - 1) |>
    mutate(`Math 4 Score Diff` = `Eligible.x` - `Eligible.y`) |>
    select(State, `Eligible.x`, `Eligible.y`, `Math 4 Score Pct`, `Math 4 Score Diff`) |>
    rename(`Math Score 2019` = `Eligible.x`, `Math Score 2003` = `Eligible.y`)

# Create a table for 8th Grade NAEP Math Score Growth (2003-2019) in the United States
low_income_naep_math_8 <- low_income_naep_math_8 |>
    filter(State == "United States") |>
    mutate(Eligible = as.numeric(NAEP))

low_income_naep_math_8_table <- low_income_naep_math_8 |>
    filter(Year == 2019) |>
    select(State, `Eligible`) |>
    left_join(
        low_income_naep_math_8 |>
            filter(Year == 2003) |>
            select(State, Eligible),
        by = "State"
    ) |>
    mutate(`Math 8 Score Pct` = `Eligible.x` / `Eligible.y` - 1) |>
    mutate(`Math 8 Score Diff` = `Eligible.x` - `Eligible.y`) |>
    select(State, `Eligible.x`, `Eligible.y`, `Math 8 Score Pct`, `Math 8 Score Diff`) |>
    rename(`Math Score 2019` = `Eligible.x`, `Math Score 2003` = `Eligible.y`)

# Take low_income_naep_reading_4_table, low_income_naep_reading_8_table, low_income_naep_math_4_table,
# and low_income_naep_math_8_table and combine them into one table

low_income_us_naep <- low_income_naep_reading_4_table |>
    left_join(
        low_income_naep_reading_8_table,
        by = "State"
    ) |>
    left_join(
        low_income_naep_math_4_table,
        by = "State"
    ) |>
    left_join(
        low_income_naep_math_8_table,
        by = "State"
    ) |>
    mutate(`Student Group` = "FR Eligible Only") |>
    select(
        `Student Group`,
        `Reading 4 Score Pct`,
        `Reading 4 Score Diff`,
        `Reading 8 Score Pct`,
        `Reading 8 Score Diff`,
        `Math 4 Score Pct`,
        `Math 4 Score Diff`,
        `Math 8 Score Pct`,
        `Math 8 Score Diff`
    )


# Bind together us_naep and  low_income_us_naep
us_naep <- rbind(us_naep, low_income_us_naep)


# Using us_naep create two tables one with Pct and one with Diff
us_naep_pct <- us_naep |>
    select(
        `Student Group`,
        `Reading 4 Score Pct`,
        `Reading 8 Score Pct`,
        `Math 4 Score Pct`,
        `Math 8 Score Pct`
    ) |>
    #  round to 1 decimal place
    mutate_at(vars(`Reading 4 Score Pct`, `Reading 8 Score Pct`, `Math 4 Score Pct`, `Math 8 Score Pct`), round, 3)

us_naep_diff <- us_naep |>
    select(
        `Student Group`,
        `Reading 4 Score Diff`,
        `Reading 8 Score Diff`,
        `Math 4 Score Diff`,
        `Math 8 Score Diff`
    ) |>
    #  round to 0 decimal place
    mutate_at(vars(`Reading 4 Score Diff`, `Reading 8 Score Diff`, `Math 4 Score Diff`, `Math 8 Score Diff`), round, 0)

# 12th Grade NAEP

naep_math_12 <- read_csv("input_data/raw_naep/naep_math_12.csv")
naep_reading_12 <- read_csv("input_data/raw_naep/naep_reading_12.csv")
low_income_math_12 <- read_csv("input_data/raw_naep/low_income_naep_math_12.csv")
low_income_reading_12 <- read_csv("input_data/raw_naep/low_income_naep_reading_12.csv")

options(scipen = 999)

# Create a table for 12th Grade NAEP Reading Score Growth (2003-2019) in the United States
naep_reading_12_table <- naep_reading_12 |>
    filter(Year == 2019) |>
    select(Jurisdiction, `Average scale score`) |>
    left_join(
        naep_reading_12 |>
            filter(Year == 2002) |>
            select(Jurisdiction, `Average scale score`),
        by = "Jurisdiction"
    ) |>
    mutate(`Reading 12 Score Pct` = `Average scale score.x` / `Average scale score.y` - 1) |>
    mutate(`Reading 12 Score Diff` = `Average scale score.x` - `Average scale score.y`) |>
    select(Jurisdiction, `Reading 12 Score Pct`, `Reading 12 Score Diff`)

# Create a table for 12th Grade NAEP Math Score Growth (2005-2019) in the United States
naep_math_12_table <- naep_math_12 |>
    filter(Year == 2019) |>
    select(Jurisdiction, `Average scale score`) |>
    left_join(
        naep_math_12 |>
            filter(Year == 2005) |>
            select(Jurisdiction, `Average scale score`),
        by = "Jurisdiction"
    ) |>
    mutate(`Math 12 Score Pct` = `Average scale score.x` / `Average scale score.y` - 1) |>
    mutate(`Math 12 Score Diff` = `Average scale score.x` - `Average scale score.y`) |>
    select(Jurisdiction, `Math 12 Score Pct`, `Math 12 Score Diff`)

# Create a table for Low Income 12th Grade NAEP Reading Score Growth (2003-2019) in the United States
low_income_naep_reading_12_table <- low_income_reading_12 |>
    filter(Year == 2019) |>
    filter(`National School Lunch Program eligibility, 3 categories` == "Eligible") |>
    select(Jurisdiction, `Average scale score`) |>
    left_join(
        low_income_reading_12 |>
            filter(Year == 2002) |>
            filter(`National School Lunch Program eligibility, 3 categories` == "Eligible") |>
            select(Jurisdiction, `Average scale score`),
        by = "Jurisdiction"
    ) |>
    mutate(`Reading 12 Score Pct` = `Average scale score.x` / `Average scale score.y` - 1) |>
    mutate(`Reading 12 Score Diff` = `Average scale score.x` - `Average scale score.y`) |>
    select(Jurisdiction, `Reading 12 Score Pct`, `Reading 12 Score Diff`)

# Create a table for Low Income 12th Grade NAEP Math Score Growth (2005-2019) in the United States
low_income_naep_math_12_table <- low_income_math_12 |>
    filter(Year == 2019) |>
    filter(`National School Lunch Program eligibility, 3 categories` == "Eligible") |>
    select(Jurisdiction, `Average scale score`) |>
    left_join(
        low_income_math_12 |>
            filter(Year == 2005) |>
            filter(`National School Lunch Program eligibility, 3 categories` == "Eligible") |>
            select(Jurisdiction, `Average scale score`),
        by = "Jurisdiction"
    ) |>
    mutate(`Math 12 Score Pct` = `Average scale score.x` / `Average scale score.y` - 1) |>
    mutate(`Math 12 Score Diff` = `Average scale score.x` - `Average scale score.y`) |>
    select(Jurisdiction, `Math 12 Score Pct`, `Math 12 Score Diff`)


# Take naep_reading_12_table, naep_math_12_table, low_income_naep_reading_12_table, low_income_naep_math_12_table
# and create a table with the following columns for each subject

us_naep_12 <- naep_reading_12_table |>
    left_join(naep_math_12_table, by = "Jurisdiction") |>
    mutate(`Student Group` = "All") |>
    select(
        `Student Group`,
        `Reading 12 Score Pct`,
        `Reading 12 Score Diff`,
        `Math 12 Score Pct`,
        `Math 12 Score Diff`
    )

low_income_us_naep_12 <- low_income_naep_reading_12_table |>
    left_join(low_income_naep_math_12_table, by = "Jurisdiction") |>
    mutate(`Student Group` = "FR Eligible Only") |>
    select(
        `Student Group`,
        `Reading 12 Score Pct`,
        `Reading 12 Score Diff`,
        `Math 12 Score Pct`,
        `Math 12 Score Diff`
    )

# Bind 12th grade NAEP and Low Income NAEP
us_naep_12 <- bind_rows(us_naep_12, low_income_us_naep_12)


# Using us_naep_12 create two tables one with Pct and one with Diff
us_naep_12_pct <- us_naep_12 |>
    select(
        `Student Group`,
        `Reading 12 Score Pct`,
        `Math 12 Score Pct`
    ) |>
    #  round to 1 decimal place
    mutate_at(vars(`Reading 12 Score Pct`, `Math 12 Score Pct`), round, 3)

us_naep_12_diff <- us_naep_12 |>
    select(
        `Student Group`,
        `Reading 12 Score Diff`,
        `Math 12 Score Diff`
    ) |>
    #  round to 0 decimal place
    mutate_at(vars(`Reading 12 Score Diff`, `Math 12 Score Diff`), round, 0)



# Join us_naep_pct and us_naep_12_pct
us_naep_pct <- us_naep_pct |>
    left_join(us_naep_12_pct, by = c("Student Group"))

# Join us_naep_diff and us_naep_12_diff
us_naep_diff <- us_naep_diff |>
    left_join(us_naep_12_diff, by = c("Student Group"))



# Write us_naep_pct and us_naep_diff to csv
write_csv(us_naep_pct, "output_data/body/introduction/intro_table_2_us_naep_pct.csv")
write_csv(us_naep_diff, "output_data/body/introduction/intro_table_2_us_naep_diff.csv")



# Table 3: Average Teacher Salary Growth for the Top 10 States in `Total Revenue - Per Pupil` growth between 2002 and 2020

# Create a table comparing the total revenue per student in 2020 to the total revenue per student in 2002
# w/ a column for percent change

rev_table <- ss_data_cpi |>
    filter(Year == 2020) |>
    select(State, `Total Revenue - Per Pupil`) |>
    left_join(
        ss_data_cpi |>
            filter(Year == 2002) |>
            select(State, `Total Revenue - Per Pupil`) |>
            mutate(
                `Total Revenue - Per Pupil` = `Total Revenue - Per Pupil`
            ),
        by = "State"
    ) |>
    mutate(`Total Revenue - Per Pupil 2020` = `Total Revenue - Per Pupil.x`) |>
    mutate(`Total Revenue - Per Pupil 2002` = `Total Revenue - Per Pupil.y`) |>
    mutate(
        `Percent Change` = `Total Revenue - Per Pupil 2020` / `Total Revenue - Per Pupil 2002` - 1
    ) |>
    select(State, `Total Revenue - Per Pupil 2020`, `Total Revenue - Per Pupil 2002`, `Percent Change`) |>
    arrange(desc(`Percent Change`))


salary_pct <- salary |>
    filter(Year != 2021) |>
    filter(State != "District of Columbia") |>
    group_by(State) |>
    mutate(`Salary Adj` = `Salary` * last(CPI) / CPI)

salary_table <- salary_pct |>
    filter(Year == 2020) |>
    select(State, `Salary Adj`) |>
    left_join(
        salary_pct |>
            filter(Year == 2002) |>
            select(State, `Salary Adj`),
        by = "State"
    ) |>
    mutate(`Salary Adj 2020` = `Salary Adj.x`) |>
    mutate(`Salary Adj 2002` = `Salary Adj.y`) |>
    mutate(
        `Percent Change` = `Salary Adj 2020` / `Salary Adj 2002` - 1
    ) |>
    select(State, `Salary Adj 2020`, `Salary Adj 2002`, `Percent Change`)


# Join rev_table and salary_table
rev_salary_table <- rev_table |>
    left_join(salary_table, by = "State") |>
    arrange(desc(`Percent Change.x`)) |>
    select(State, `Total Revenue - Per Pupil 2020`, `Total Revenue - Per Pupil 2002`, `Percent Change.x`, `Salary Adj 2020`, `Salary Adj 2002`, `Percent Change.y`) |>
    head(10) |>
    mutate_at(vars(`Percent Change.x`, `Percent Change.y`), round, 3) |>
    rename(
        `Revenue Growth` = `Percent Change.x`,
        `Salary Growth` = `Percent Change.y`
    )


# Write rev_salary_table to csv
write_csv(rev_salary_table, "output_data/body/introduction/intro_table_3_rev_salary_table.csv")



# Table 4: Staffing Trends for the Top 10 Enrollment Decline States

# Create a table comparing student enrollment growth and staffing growth between 2002 and 2020

enrollment_trends <- ss_data_cpi |>
    filter(Year == 2020) |>
    filter(State != "District of Columbia") |>
    select(State, Enrollment) |>
    left_join(
        ss_data_cpi |>
            filter(Year == 2002) |>
            filter(State != "District of Columbia") |>
            select(State, Enrollment),
        by = "State"
    ) |>
    rename(`Enrollment 2020` = Enrollment.x) |>
    rename(`Enrollment 2002` = Enrollment.y) |>
    mutate(
        `Enrollment Growth` = `Enrollment 2020` / `Enrollment 2002` - 1
    )

staffing_trends <- staffing |>
    filter(Year == 2020) |>
    filter(State != "District of Columbia") |>
    select(State, `Teachers`, `All staff`) |>
    mutate(`Non-Teachers` = `All staff` - `Teachers`) |>
    mutate(`Total Staff` = `Teachers` + `Non-Teachers`) |>
    left_join(
        staffing |>
            filter(Year == 2002) |>
            filter(State != "District of Columbia") |>
            select(State, `Teachers`, `All staff`) |>
            mutate(`Non-Teachers` = `All staff` - `Teachers`) |>
            mutate(`Total Staff` = `Teachers` + `Non-Teachers`),
        by = "State"
    ) |>
    rename(`Teachers 2020` = `Teachers.x`) |>
    rename(`Teachers 2002` = `Teachers.y`) |>
    rename(`Non-Teachers 2020` = `Non-Teachers.x`) |>
    rename(`Non-Teachers 2002` = `Non-Teachers.y`) |>
    rename(`Total Staff 2020` = `Total Staff.x`) |>
    rename(`Total Staff 2002` = `Total Staff.y`) |>
    mutate(
        `Teachers Growth` = `Teachers 2020` / `Teachers 2002` - 1
    ) |>
    mutate(
        `Non-Teachers Growth` = `Non-Teachers 2020` / `Non-Teachers 2002` - 1
    ) |>
    mutate(
        `Total Staff Growth` = `Total Staff 2020` / `Total Staff 2002` - 1
    )


# Join enrollment_trends and staffing_trends

enrollment_staffing_trends <- enrollment_trends |>
    left_join(staffing_trends, by = "State") |>
    arrange(`Enrollment Growth`) |>
    select(State, `Enrollment 2020`, `Enrollment 2002`, `Enrollment Growth`, `Total Staff Growth`, `Non-Teachers Growth`, `Teachers Growth`) |>
    head(10) |>
    mutate_at(vars(`Enrollment Growth`, `Teachers Growth`, `Non-Teachers Growth`, `Total Staff Growth`), round, 3) |>
    select(State, `Enrollment 2002`, `Enrollment 2020`, `Enrollment Growth`, `Total Staff Growth`, `Non-Teachers Growth`, `Teachers Growth`)


# Write enrollment_staffing_trends to csv

write_csv(enrollment_staffing_trends, "output_data/body/introduction/intro_table_4_enrollment_staffing_trends.csv")



# Table 5: Benefit Spending Per Student Growth vs. Total Revenue Per Student Growth

# Create a table comparing benefit spending per student growth and total revenue per student growth between 2002 and 2020

rev_benefit_trends <- ss_data_cpi |>
    filter(Year == 2020) |>
    filter(State != "District of Columbia") |>
    select(State, `Total Revenue - Per Pupil`, `Total Benefits - Per Pupil`) |>
    left_join(
        ss_data_cpi |>
            filter(Year == 2002) |>
            filter(State != "District of Columbia") |>
            select(State, `Total Revenue - Per Pupil`, `Total Benefits - Per Pupil`),
        by = "State"
    ) |>
    rename(`Total Revenue - Per Pupil 2020` = `Total Revenue - Per Pupil.x`) |>
    rename(`Total Revenue - Per Pupil 2002` = `Total Revenue - Per Pupil.y`) |>
    rename(`Total Benefits - Per Pupil 2020` = `Total Benefits - Per Pupil.x`) |>
    rename(`Total Benefits - Per Pupil 2002` = `Total Benefits - Per Pupil.y`) |>
    mutate(
        `Total Revenue Raw Growth` = `Total Revenue - Per Pupil 2020` - `Total Revenue - Per Pupil 2002`
    ) |>
    mutate(
        `Total Benefits Raw Growth` = `Total Benefits - Per Pupil 2020` - `Total Benefits - Per Pupil 2002`
    ) |>
    mutate(
        `Total Benefits Growth` = `Total Benefits - Per Pupil 2020` / `Total Benefits - Per Pupil 2002` - 1
    ) |>
    mutate(
        `Benefit Spending Growth / Revenue Growth` = `Total Benefits Raw Growth` / `Total Revenue Raw Growth`
    ) |>
    arrange(desc(`Total Benefits Growth`)) |>
    select(State, `Total Benefits - Per Pupil 2002`, `Total Benefits - Per Pupil 2020`, `Total Benefits Growth`, `Total Benefits Raw Growth`, `Benefit Spending Growth / Revenue Growth`) |>
    mutate_at(vars(`Total Benefits Raw Growth`), round, 0) |>
    mutate_at(vars(`Total Benefits Growth`), round, 3) |>
    mutate_at(vars(`Benefit Spending Growth / Revenue Growth`), round, 3) |>
    head(10)


# Write rev_benefit_trends to csv
write_csv(rev_benefit_trends, "output_data/body/introduction/intro_table_5_rev_benefit_trends.csv")



# Table 6: NAEP Score Growth for the Five Highest Spending States

naep_math_4 <- read_csv("input_data/raw_naep/naep_4_math_ts.csv")
naep_math_8 <- read_csv("input_data/raw_naep/naep_8_math_ts.csv")
naep_reading_4 <- read_csv("input_data/raw_naep/naep_4_reading_ts.csv")
naep_reading_8 <- read_csv("input_data/raw_naep/naep_8_reading_ts.csv")


naep_reading_4_table <- naep_reading_4 |>
    filter(Year == 2019) |>
    filter(State != "District of Columbia") |>
    filter(State != "DoDEA") |>
    filter(State != "Puerto Rico") |>
    select(State, `NAEP`) |>
    left_join(
        naep_reading_4 |>
            filter(Year == 2003) |>
            select(State, NAEP),
        by = "State"
    ) |>
    mutate(`Reading 4 Score Pct` = `NAEP.x` / `NAEP.y` - 1) |>
    mutate(`Reading 4 Score Diff` = `NAEP.x` - `NAEP.y`) |>
    select(State, `Reading 4 Score Diff`) |>
    # mutate(`Reading 4 Score Pct` = round(`Reading 4 Score Pct`, 3)) |>
    mutate(`Reading 4 Score Diff` = round(`Reading 4 Score Diff`, 0))


naep_reading_8_table <- naep_reading_8 |>
    filter(Year == 2019) |>
    filter(State != "District of Columbia") |>
    filter(State != "DoDEA") |>
    filter(State != "Puerto Rico") |>
    select(State, `NAEP`) |>
    left_join(
        naep_reading_8 |>
            filter(Year == 2003) |>
            select(State, NAEP),
        by = "State"
    ) |>
    mutate(`Reading 8 Score Pct` = `NAEP.x` / `NAEP.y` - 1) |>
    mutate(`Reading 8 Score Diff` = `NAEP.x` - `NAEP.y`) |>
    select(State, `Reading 8 Score Diff`) |>
    # mutate(`Reading 8 Score Pct` = round(`Reading 8 Score Pct`, 3)) |>
    mutate(`Reading 8 Score Diff` = round(`Reading 8 Score Diff`, 0))


naep_math_4_table <- naep_math_4 |>
    filter(Year == 2019) |>
    filter(State != "District of Columbia") |>
    filter(State != "DoDEA") |>
    filter(State != "Puerto Rico") |>
    select(State, `NAEP`) |>
    left_join(
        naep_math_4 |>
            filter(Year == 2003) |>
            select(State, NAEP),
        by = "State"
    ) |>
    mutate(`Math 4 Score Pct` = `NAEP.x` / `NAEP.y` - 1) |>
    mutate(`Math 4 Score Diff` = `NAEP.x` - `NAEP.y`) |>
    select(State, `Math 4 Score Diff`) |>
    # mutate(`Math 4 Score Pct` = round(`Math 4 Score Pct`, 3)) |>
    mutate(`Math 4 Score Diff` = round(`Math 4 Score Diff`, 0))


naep_math_8_table <- naep_math_8 |>
    filter(Year == 2019) |>
    filter(State != "District of Columbia") |>
    filter(State != "DoDEA") |>
    filter(State != "Puerto Rico") |>
    select(State, `NAEP`) |>
    left_join(
        naep_math_8 |>
            filter(Year == 2003) |>
            select(State, NAEP),
        by = "State"
    ) |>
    mutate(`Math 8 Score Pct` = `NAEP.x` / `NAEP.y` - 1) |>
    mutate(`Math 8 Score Diff` = `NAEP.x` - `NAEP.y`) |>
    select(State, `Math 8 Score Diff`) |>
    # mutate(`Math 8 Score Pct` = round(`Math 8 Score Pct`, 3)) |>
    mutate(`Math 8 Score Diff` = round(`Math 8 Score Diff`, 0))





# Low income NAEP

low_income_naep_math_4 <- read_csv("input_data/raw_naep/naep_4_math_low_income_ts.csv")
low_income_naep_reading_4 <- read_csv("input_data/raw_naep/naep_4_reading_low_income_ts.csv")
low_income_naep_math_8 <- read_csv("input_data/raw_naep/naep_8_math_low_income_ts.csv")
low_income_naep_reading_8 <- read_csv("input_data/raw_naep/naep_8_reading_low_income_ts.csv")


low_income_naep_reading_4 <- low_income_naep_reading_4 |>
    filter(State != "DoDEA") |>
    mutate(Eligible = as.numeric(NAEP))

low_income_naep_reading_4_table <- low_income_naep_reading_4 |>
    filter(Year == 2019) |>
    filter(State != "District of Columbia") |>
    filter(State != "DoDEA") |>
    filter(State != "Puerto Rico") |>
    select(State, `Eligible`) |>
    left_join(
        low_income_naep_reading_4 |>
            filter(Year == 2003) |>
            select(State, Eligible),
        by = "State"
    ) |>
    mutate(`Reading Score Diff` = `Eligible.x` - `Eligible.y`) |>
    select(State, `Reading Score Diff`) |>
    mutate(`Reading Score Diff` = round(`Reading Score Diff`, 0)) |>
    rename(`Low Income Reading 4 Score` = `Reading Score Diff`)


low_income_naep_reading_8 <- low_income_naep_reading_8 |>
    filter(State != "DoDEA") |>
    mutate(Eligible = as.numeric(NAEP))

low_income_naep_reading_8_table <- low_income_naep_reading_8 |>
    filter(Year == 2019) |>
    filter(State != "District of Columbia") |>
    filter(State != "DoDEA") |>
    filter(State != "Puerto Rico") |>
    select(State, `Eligible`) |>
    left_join(
        low_income_naep_reading_8 |>
            filter(Year == 2003) |>
            select(State, Eligible),
        by = "State"
    ) |>
    mutate(`Reading Score Diff` = `Eligible.x` - `Eligible.y`) |>
    select(State, `Reading Score Diff`) |>
    mutate(`Reading Score Diff` = round(`Reading Score Diff`, 0)) |>
    rename(`Low Income Reading 8 Score` = `Reading Score Diff`)


low_income_naep_math_4 <- low_income_naep_math_4 |>
    filter(State != "DoDEA") |>
    mutate(Eligible = as.numeric(NAEP))

low_income_naep_math_4_table <- low_income_naep_math_4 |>
    filter(Year == 2019) |>
    filter(State != "District of Columbia") |>
    filter(State != "DoDEA") |>
    filter(State != "Puerto Rico") |>
    select(State, `Eligible`) |>
    left_join(
        low_income_naep_math_4 |>
            filter(Year == 2003) |>
            select(State, Eligible),
        by = "State"
    ) |>
    mutate(`Math Score Diff` = `Eligible.x` - `Eligible.y`) |>
    select(State, `Math Score Diff`) |>
    mutate(`Math Score Diff` = round(`Math Score Diff`, 0)) |>
    rename(`Low Income Math 4 Score` = `Math Score Diff`)


low_income_naep_math_8 <- low_income_naep_math_8 |>
    filter(State != "DoDEA") |>
    mutate(Eligible = as.numeric(NAEP))

low_income_naep_math_8_table <- low_income_naep_math_8 |>
    filter(Year == 2019) |>
    filter(State != "District of Columbia") |>
    filter(State != "DoDEA") |>
    filter(State != "Puerto Rico") |>
    select(State, `Eligible`) |>
    left_join(
        low_income_naep_math_8 |>
            filter(Year == 2003) |>
            select(State, Eligible),
        by = "State"
    ) |>
    mutate(`Math Score Diff` = `Eligible.x` - `Eligible.y`) |>
    select(State, `Math Score Diff`) |>
    mutate(`Math Score Diff` = round(`Math Score Diff`, 0)) |>
    rename(`Low Income Math 8 Score` = `Math Score Diff`)


# Create a table of the top 5 and bottom 5 states for `Total Revenue Per Pupil`

intro_table_6 <- ss_data_cpi |>
    filter(Year == 2020) |>
    filter(State != "District of Columbia") |>
    select(State, `Total Revenue - Per Pupil`) |>
    left_join(
        ss_data_cpi |>
            filter(Year == 2002) |>
            select(State, `Total Revenue - Per Pupil`),
        by = "State"
    ) |>
    mutate(`Total Revenue Per Pupil Diff` = `Total Revenue - Per Pupil.x` / `Total Revenue - Per Pupil.y` - 1) |>
    arrange(desc(`Total Revenue Per Pupil Diff`)) |>
    mutate(`Total Revenue Per Pupil Diff` = round(`Total Revenue Per Pupil Diff`, 3))

intro_table_6_top <- intro_table_6 |>
    head(5)

intro_table_6_bottom <- intro_table_6 |>
    tail(5)

# Row bind the top and bottom tables
intro_table_6 <- rbind(intro_table_6_top, intro_table_6_bottom)


# Left join NAEP tables to intro table

intro_table_6_join <- intro_table_6 |>
    left_join(
        naep_math_4_table,
        by = "State"
    ) |>
    left_join(
        naep_math_8_table,
        by = "State"
    ) |>
    left_join(
        naep_reading_4_table,
        by = "State"
    ) |>
    left_join(
        naep_reading_8_table,
        by = "State"
    ) |>
    left_join(
        low_income_naep_math_4_table,
        by = "State"
    ) |>
    left_join(
        low_income_naep_math_8_table,
        by = "State"
    ) |>
    left_join(
        low_income_naep_reading_4_table,
        by = "State"
    ) |>
    left_join(
        low_income_naep_reading_8_table,
        by = "State"
    )

intro_table_6 <- intro_table_6_join |>
    mutate(`Revenue 2020` = `Total Revenue - Per Pupil.x`) |>
    mutate(`Revenue 2002` = `Total Revenue - Per Pupil.y`) |>
    select(State, `Revenue 2020`, `Revenue 2002`, `Total Revenue Per Pupil Diff`, `Reading 4 Score Diff`, `Math 4 Score Diff`, `Reading 8 Score Diff`, `Math 8 Score Diff`, `Low Income Reading 4 Score`, `Low Income Math 4 Score`, `Low Income Reading 8 Score`, `Low Income Math 8 Score`)


write_csv(intro_table_6, "output_data/body/introduction/intro_table_6.csv")


# Revenue and Expenditure Trends

rev_table <- ss_data_cpi |>
    filter(Year == 2020) |>
    select(State, `Total Revenue - Per Pupil`) |>
    left_join(
        ss_data_cpi |>
            filter(Year == 2002) |>
            select(State, `Total Revenue - Per Pupil`) |>
            mutate(
                `Total Revenue - Per Pupil` = `Total Revenue - Per Pupil`
            ),
        by = "State"
    ) |>
    mutate(`Total Revenue - Per Pupil 2020` = `Total Revenue - Per Pupil.x`) |>
    mutate(`Total Revenue - Per Pupil 2002` = `Total Revenue - Per Pupil.y`) |>
    mutate(
        `Percent Change` = `Total Revenue - Per Pupil 2020` / `Total Revenue - Per Pupil 2002` - 1
    ) |>
    select(State, `Total Revenue - Per Pupil 2020`, `Total Revenue - Per Pupil 2002`, `Percent Change`) |>
    arrange(desc(`Percent Change`))

# Remove the United States row, add a rank column, then add back the United States row to the top of the table

rev_table_states <- rev_table |>
    as.data.frame() |>
    filter(State != "United States") |>
    arrange(desc(`Percent Change`)) |>
    mutate(`Growth Rank` = row_number()) |>
    arrange(desc(`Total Revenue - Per Pupil 2020`)) |>
    mutate(`2020 Rank` = row_number()) |>
    rename(
        `2020` = `Total Revenue - Per Pupil 2020`,
        `2002` = `Total Revenue - Per Pupil 2002`,
        `Growth` = `Percent Change`
    ) |>
    select(`Growth Rank`, `2020 Rank`, State, `2020`, `2002`, `Growth`) |>
    arrange(desc(`Growth`))


rev_table_us <- rev_table |>
    as.data.frame() |>
    filter(State == "United States") |>
    mutate(
        `Growth Rank` = " ",
        `2020 Rank` = " "
    ) |>
    rename(
        `2020` = `Total Revenue - Per Pupil 2020`,
        `2002` = `Total Revenue - Per Pupil 2002`,
        `Growth` = `Percent Change`
    ) |>
    select(`Growth Rank`, `2020 Rank`, State, `2020`, `2002`, `Growth`)


rev_table <- rbind(rev_table_us, rev_table_states)


rev_table <- rev_table |>
    # Round values
    mutate(`2020` = round(`2020`, 0)) |>
    mutate(`2002` = round(`2002`, 0)) |>
    mutate(`Growth` = round(`Growth`, 3))


# Write csv
write_csv(rev_table, "output_data/body/revenue_expenditure_trends/rev_table.csv")



# Table 2: Support Services Spending Per Student Growth (2002-2020)

support_services_table <- ss_data_cpi |>
    filter(Year == 2020) |>
    select(State, `All Support Services - Per Pupil`) |>
    left_join(
        ss_data_cpi |>
            filter(Year == 2002) |>
            select(State, `All Support Services - Per Pupil`),
        by = "State"
    ) |>
    mutate(`All Support Services - Per Pupil 2020` = `All Support Services - Per Pupil.x`) |>
    mutate(`All Support Services - Per Pupil 2002` = `All Support Services - Per Pupil.y`) |>
    mutate(
        `Percent Change` = `All Support Services - Per Pupil 2020` / `All Support Services - Per Pupil 2002` - 1
    ) |>
    select(State, `All Support Services - Per Pupil 2020`, `All Support Services - Per Pupil 2002`, `Percent Change`) |>
    arrange(desc(`Percent Change`))

# Remove the United States row, add a rank column, then add back the United States row to the top of the table

support_services_table_states <- support_services_table |>
    as.data.frame() |>
    filter(State != "United States") |>
    arrange(desc(`Percent Change`)) |>
    mutate(`Growth Rank` = row_number()) |>
    arrange(desc(`All Support Services - Per Pupil 2020`)) |>
    mutate(`2020 Rank` = row_number()) |>
    rename(
        `2020` = `All Support Services - Per Pupil 2020`,
        `2002` = `All Support Services - Per Pupil 2002`,
        `Growth` = `Percent Change`
    ) |>
    select(`Growth Rank`, `2020 Rank`, State, `2020`, `2002`, `Growth`) |>
    arrange(desc(`Growth`))


support_services_table_us <- support_services_table |>
    as.data.frame() |>
    filter(State == "United States") |>
    mutate(
        `Growth Rank` = " ",
        `2020 Rank` = " "
    ) |>
    rename(
        `2020` = `All Support Services - Per Pupil 2020`,
        `2002` = `All Support Services - Per Pupil 2002`,
        `Growth` = `Percent Change`
    ) |>
    select(`Growth Rank`, `2020 Rank`, State, `2020`, `2002`, `Growth`)


support_services_table <- rbind(support_services_table_us, support_services_table_states)


support_services_table <- support_services_table |>
    # Round values
    mutate(`2020` = round(`2020`, 0)) |>
    mutate(`2002` = round(`2002`, 0)) |>
    mutate(`Growth` = round(`Growth`, 3))


# Write csv
write_csv(support_services_table, "output_data/body/revenue_expenditure_trends/support_services_table.csv")



# Table 3: Instruction Spending Per Student Growth (2002-2020)

instruction_table <- ss_data_cpi |>
    filter(Year == 2020) |>
    select(State, `All Instruction - Per Pupil`) |>
    left_join(
        ss_data_cpi |>
            filter(Year == 2002) |>
            select(State, `All Instruction - Per Pupil`),
        by = "State"
    ) |>
    mutate(`Instruction - Per Pupil 2020` = `All Instruction - Per Pupil.x`) |>
    mutate(`Instruction - Per Pupil 2002` = `All Instruction - Per Pupil.y`) |>
    mutate(
        `Percent Change` = `Instruction - Per Pupil 2020` / `Instruction - Per Pupil 2002` - 1
    ) |>
    select(State, `Instruction - Per Pupil 2020`, `Instruction - Per Pupil 2002`, `Percent Change`) |>
    arrange(desc(`Percent Change`))

# Remove the United States row, add a rank column, then add back the United States row to the top of the table

instruction_table_states <- instruction_table |>
    as.data.frame() |>
    filter(State != "United States") |>
    arrange(desc(`Percent Change`)) |>
    mutate(`Growth Rank` = row_number()) |>
    arrange(desc(`Instruction - Per Pupil 2020`)) |>
    mutate(`2020 Rank` = row_number()) |>
    rename(
        `2020` = `Instruction - Per Pupil 2020`,
        `2002` = `Instruction - Per Pupil 2002`,
        `Growth` = `Percent Change`
    ) |>
    select(`Growth Rank`, `2020 Rank`, State, `2020`, `2002`, `Growth`) |>
    arrange(desc(`Growth`))


instruction_table_us <- instruction_table |>
    as.data.frame() |>
    filter(State == "United States") |>
    mutate(
        `Growth Rank` = " ",
        `2020 Rank` = " "
    ) |>
    rename(
        `2020` = `Instruction - Per Pupil 2020`,
        `2002` = `Instruction - Per Pupil 2002`,
        `Growth` = `Percent Change`
    ) |>
    select(`Growth Rank`, `2020 Rank`, State, `2020`, `2002`, `Growth`)


instruction_table <- rbind(instruction_table_us, instruction_table_states)


instruction_table <- instruction_table |>
    # Round values
    mutate(`2020` = round(`2020`, 0)) |>
    mutate(`2002` = round(`2002`, 0)) |>
    mutate(`Growth` = round(`Growth`, 3))


# Write csv
write_csv(instruction_table, "output_data/body/revenue_expenditure_trends/instruction_table.csv")



# Table 4: Employee Benefit Spending Per Student Growth (2002-2020)

employee_benefits_table <- ss_data_cpi |>
    filter(Year == 2020) |>
    select(State, `Total Benefits - Per Pupil`) |>
    left_join(
        ss_data_cpi |>
            filter(Year == 2002) |>
            select(State, `Total Benefits - Per Pupil`),
        by = "State"
    ) |>
    mutate(`Total Benefits - Per Pupil 2020` = `Total Benefits - Per Pupil.x`) |>
    mutate(`Total Benefits - Per Pupil 2002` = `Total Benefits - Per Pupil.y`) |>
    mutate(
        `Percent Change` = `Total Benefits - Per Pupil 2020` / `Total Benefits - Per Pupil 2002` - 1
    ) |>
    select(State, `Total Benefits - Per Pupil 2020`, `Total Benefits - Per Pupil 2002`, `Percent Change`) |>
    arrange(desc(`Percent Change`))


# Remove the United States row, add a rank column, then add back the United States row to the top of the table

employee_benefits_table_states <- employee_benefits_table |>
    as.data.frame() |>
    filter(State != "United States") |>
    arrange(desc(`Percent Change`)) |>
    mutate(`Growth Rank` = row_number()) |>
    arrange(desc(`Total Benefits - Per Pupil 2020`)) |>
    mutate(`2020 Rank` = row_number()) |>
    rename(
        `2020` = `Total Benefits - Per Pupil 2020`,
        `2002` = `Total Benefits - Per Pupil 2002`,
        `Growth` = `Percent Change`
    ) |>
    select(`Growth Rank`, `2020 Rank`, State, `2020`, `2002`, `Growth`) |>
    arrange(desc(`Growth`))


employee_benefits_table_us <- employee_benefits_table |>
    as.data.frame() |>
    filter(State == "United States") |>
    mutate(
        `Growth Rank` = " ",
        `2020 Rank` = " "
    ) |>
    rename(
        `2020` = `Total Benefits - Per Pupil 2020`,
        `2002` = `Total Benefits - Per Pupil 2002`,
        `Growth` = `Percent Change`
    ) |>
    select(`Growth Rank`, `2020 Rank`, State, `2020`, `2002`, `Growth`)


employee_benefits_table <- rbind(employee_benefits_table_us, employee_benefits_table_states)


employee_benefits_table <- employee_benefits_table |>
    # Round values
    mutate(`2020` = round(`2020`, 0)) |>
    mutate(`2002` = round(`2002`, 0)) |>
    mutate(`Growth` = round(`Growth`, 3))


# Write csv
write_csv(employee_benefits_table, "output_data/body/revenue_expenditure_trends/employee_benefits_table.csv")



# Table 5: Capital Outlay Spending Per Student Growth (2002-2020)

capital_outlay_table <- ss_data_cpi |>
    filter(Year == 2020) |>
    select(State, `Total Capital Outlays - Per Pupil`) |>
    left_join(
        ss_data_cpi |>
            filter(Year == 2002) |>
            select(State, `Total Capital Outlays - Per Pupil`),
        by = "State"
    ) |>
    mutate(`Total Capital Outlays - Per Pupil 2020` = `Total Capital Outlays - Per Pupil.x`) |>
    mutate(`Total Capital Outlays - Per Pupil 2002` = `Total Capital Outlays - Per Pupil.y`) |>
    mutate(
        `Percent Change` = `Total Capital Outlays - Per Pupil 2020` / `Total Capital Outlays - Per Pupil 2002` - 1
    ) |>
    select(State, `Total Capital Outlays - Per Pupil 2020`, `Total Capital Outlays - Per Pupil 2002`, `Percent Change`) |>
    arrange(desc(`Percent Change`))


# Remove the United States row, add a rank column, then add back the United States row to the top of the table

capital_outlay_table_states <- capital_outlay_table |>
    as.data.frame() |>
    filter(State != "United States") |>
    arrange(desc(`Percent Change`)) |>
    mutate(`Growth Rank` = row_number()) |>
    arrange(desc(`Total Capital Outlays - Per Pupil 2020`)) |>
    mutate(`2020 Rank` = row_number()) |>
    rename(
        `2020` = `Total Capital Outlays - Per Pupil 2020`,
        `2002` = `Total Capital Outlays - Per Pupil 2002`,
        `Growth` = `Percent Change`
    ) |>
    select(`Growth Rank`, `2020 Rank`, State, `2020`, `2002`, `Growth`) |>
    arrange(desc(`Growth`))


capital_outlay_table_us <- capital_outlay_table |>
    as.data.frame() |>
    filter(State == "United States") |>
    mutate(
        `Growth Rank` = " ",
        `2020 Rank` = " "
    ) |>
    rename(
        `2020` = `Total Capital Outlays - Per Pupil 2020`,
        `2002` = `Total Capital Outlays - Per Pupil 2002`,
        `Growth` = `Percent Change`
    ) |>
    select(`Growth Rank`, `2020 Rank`, State, `2020`, `2002`, `Growth`)


capital_outlay_table <- rbind(capital_outlay_table_us, capital_outlay_table_states)


capital_outlay_table <- capital_outlay_table |>
    # Round values
    mutate(`2020` = round(`2020`, 0)) |>
    mutate(`2002` = round(`2002`, 0)) |>
    mutate(`Growth` = round(`Growth`, 3))


# Write csv
write_csv(capital_outlay_table, "output_data/body/revenue_expenditure_trends/capital_outlay_table.csv")


# Table 6: Total Debt Per Student Growth (2002-2020)

total_debt_table <- ss_data_cpi |>
    filter(Year == 2020) |>
    select(State, `Total Debt - Per Pupil`) |>
    left_join(
        ss_data_cpi |>
            filter(Year == 2002) |>
            select(State, `Total Debt - Per Pupil`),
        by = "State"
    ) |>
    mutate(`Total Debt - Per Pupil 2020` = `Total Debt - Per Pupil.x`) |>
    mutate(`Total Debt - Per Pupil 2002` = `Total Debt - Per Pupil.y`) |>
    mutate(
        `Percent Change` = `Total Debt - Per Pupil 2020` / `Total Debt - Per Pupil 2002` - 1
    ) |>
    select(State, `Total Debt - Per Pupil 2020`, `Total Debt - Per Pupil 2002`, `Percent Change`) |>
    arrange(desc(`Percent Change`))


# Remove the United States row, add a rank column, then add back the United States row to the top of the table

total_debt_table_states <- total_debt_table |>
    as.data.frame() |>
    filter(State != "United States") |>
    arrange(desc(`Percent Change`)) |>
    mutate(`Growth Rank` = row_number()) |>
    arrange(desc(`Total Debt - Per Pupil 2020`)) |>
    mutate(`2020 Rank` = row_number()) |>
    rename(
        `2020` = `Total Debt - Per Pupil 2020`,
        `2002` = `Total Debt - Per Pupil 2002`,
        `Growth` = `Percent Change`
    ) |>
    select(`Growth Rank`, `2020 Rank`, State, `2020`, `2002`, `Growth`) |>
    arrange(desc(`Growth`))


total_debt_table_us <- total_debt_table |>
    as.data.frame() |>
    filter(State == "United States") |>
    mutate(
        `Growth Rank` = " ",
        `2020 Rank` = " "
    ) |>
    rename(
        `2020` = `Total Debt - Per Pupil 2020`,
        `2002` = `Total Debt - Per Pupil 2002`,
        `Growth` = `Percent Change`
    ) |>
    select(`Growth Rank`, `2020 Rank`, State, `2020`, `2002`, `Growth`)


total_debt_table <- rbind(total_debt_table_us, total_debt_table_states)


total_debt_table <- total_debt_table |>
    # Round values
    mutate(`2020` = round(`2020`, 0)) |>
    mutate(`2002` = round(`2002`, 0)) |>
    mutate(`Growth` = round(`Growth`, 3))


# Write csv
write_csv(total_debt_table, "output_data/body/revenue_expenditure_trends/total_debt_table.csv")





# Table 7: Public School Enrollment Growth (2002-2020)

enrollment_table <- ss_data_cpi |>
    filter(Year == 2020) |>
    rename(`Total Enrollment` = Enrollment) |>
    select(State, `Total Enrollment`) |>
    left_join(
        ss_data_cpi |>
            filter(Year == 2002) |>
            rename(`Total Enrollment` = Enrollment) |>
            select(State, `Total Enrollment`),
        by = "State"
    ) |>
    mutate(`Total Enrollment 2020` = `Total Enrollment.x`) |>
    mutate(`Total Enrollment 2002` = `Total Enrollment.y`) |>
    mutate(
        `Percent Change` = `Total Enrollment 2020` / `Total Enrollment 2002` - 1
    ) |>
    select(State, `Total Enrollment 2020`, `Total Enrollment 2002`, `Percent Change`) |>
    arrange(desc(`Percent Change`))


# Remove the United States row, add a rank column, then add back the United States row to the top of the table

enrollment_table_states <- enrollment_table |>
    as.data.frame() |>
    filter(State != "United States") |>
    arrange(desc(`Percent Change`)) |>
    mutate(`Growth Rank` = row_number()) |>
    arrange(desc(`Total Enrollment 2020`)) |>
    mutate(`2020 Rank` = row_number()) |>
    rename(
        `2020` = `Total Enrollment 2020`,
        `2002` = `Total Enrollment 2002`,
        `Growth` = `Percent Change`
    ) |>
    select(`Growth Rank`, `2020 Rank`, State, `2020`, `2002`, `Growth`) |>
    arrange(desc(`Growth`))


enrollment_table_us <- enrollment_table |>
    as.data.frame() |>
    filter(State == "United States") |>
    mutate(
        `Growth Rank` = " ",
        `2020 Rank` = " "
    ) |>
    rename(
        `2020` = `Total Enrollment 2020`,
        `2002` = `Total Enrollment 2002`,
        `Growth` = `Percent Change`
    ) |>
    select(`Growth Rank`, `2020 Rank`, State, `2020`, `2002`, `Growth`)


enrollment_table <- rbind(enrollment_table_us, enrollment_table_states)


enrollment_table <- enrollment_table |>
    # Round values
    mutate(`2020` = round(`2020`, 0)) |>
    mutate(`2002` = round(`2002`, 0)) |>
    mutate(`Growth` = round(`Growth`, 3))


# Write csv
write_csv(enrollment_table, "output_data/body/enrollment_staffing_trends/enrollment_table.csv")




# Table 8: Non-Teaching Staff Growth (2002-2020)

staffing <- read_csv("input_data/teachers_non_teachers.csv")


staffing_table <- staffing |>
    filter(Year == 2020) |>
    mutate(`Non-Teaching Staff` = `All staff` - `Teachers`) |>
    select(State, `Non-Teaching Staff`) |>
    left_join(
        staffing |>
            filter(Year == 2002) |>
            mutate(`Non-Teaching Staff` = `All staff` - `Teachers`) |>
            select(State, `Non-Teaching Staff`),
        by = "State"
    ) |>
    mutate(`Non-Teaching Staff 2020` = `Non-Teaching Staff.x`) |>
    mutate(`Non-Teaching Staff 2002` = `Non-Teaching Staff.y`) |>
    mutate(
        `Percent Change` = `Non-Teaching Staff 2020` / `Non-Teaching Staff 2002` - 1
    ) |>
    select(State, `Non-Teaching Staff 2020`, `Non-Teaching Staff 2002`, `Percent Change`) |>
    arrange(desc(`Percent Change`))


# Remove the United States row, add a rank column, then add back the United States row to the top of the table

staffing_table_states <- staffing_table |>
    as.data.frame() |>
    filter(State != "United States") |>
    filter(State != "District of Columbia") |>
    arrange(desc(`Percent Change`)) |>
    mutate(`Growth Rank` = row_number()) |>
    arrange(desc(`Non-Teaching Staff 2020`)) |>
    mutate(`2020 Rank` = row_number()) |>
    rename(
        `2020` = `Non-Teaching Staff 2020`,
        `2002` = `Non-Teaching Staff 2002`,
        `Growth` = `Percent Change`
    ) |>
    select(`Growth Rank`, `2020 Rank`, State, `2020`, `2002`, `Growth`) |>
    arrange(desc(`Growth`))


staffing_table_us <- staffing_table |>
    as.data.frame() |>
    filter(State == "United States") |>
    mutate(
        `Growth Rank` = " ",
        `2020 Rank` = " "
    ) |>
    rename(
        `2020` = `Non-Teaching Staff 2020`,
        `2002` = `Non-Teaching Staff 2002`,
        `Growth` = `Percent Change`
    ) |>
    select(`Growth Rank`, `2020 Rank`, State, `2020`, `2002`, `Growth`)


staffing_table <- rbind(staffing_table_us, staffing_table_states)


staffing_table <- staffing_table |>
    # Round values
    mutate(`2020` = round(`2020`, 0)) |>
    mutate(`2002` = round(`2002`, 0)) |>
    mutate(`Growth` = round(`Growth`, 3))


# Write csv
write_csv(staffing_table, "output_data/body/enrollment_staffing_trends/staffing_table.csv")



# Table 7: Teaching Staff Growth (2002-2020)

teachers <- read_csv("input_data/teachers_non_teachers.csv")


teachers_table <- teachers |>
    filter(Year == 2020) |>
    select(State, `Teachers`) |>
    left_join(
        teachers |>
            filter(Year == 2002) |>
            select(State, `Teachers`),
        by = "State"
    ) |>
    mutate(`Teachers 2020` = `Teachers.x`) |>
    mutate(`Teachers 2002` = `Teachers.y`) |>
    mutate(
        `Percent Change` = `Teachers 2020` / `Teachers 2002` - 1
    ) |>
    select(State, `Teachers 2020`, `Teachers 2002`, `Percent Change`) |>
    arrange(desc(`Percent Change`))


# Remove the United States row, add a rank column, then add back the United States row to the top of the table

teachers_table_states <- teachers_table |>
    as.data.frame() |>
    filter(State != "United States") |>
    filter(State != "District of Columbia") |>
    arrange(desc(`Percent Change`)) |>
    mutate(`Growth Rank` = row_number()) |>
    arrange(desc(`Teachers 2020`)) |>
    mutate(`2020 Rank` = row_number()) |>
    rename(
        `2020` = `Teachers 2020`,
        `2002` = `Teachers 2002`,
        `Growth` = `Percent Change`
    ) |>
    select(`Growth Rank`, `2020 Rank`, State, `2020`, `2002`, `Growth`) |>
    arrange(desc(`Growth`))


teachers_table_us <- teachers_table |>
    as.data.frame() |>
    filter(State == "United States") |>
    mutate(
        `Growth Rank` = " ",
        `2020 Rank` = " "
    ) |>
    rename(
        `2020` = `Teachers 2020`,
        `2002` = `Teachers 2002`,
        `Growth` = `Percent Change`
    ) |>
    select(`Growth Rank`, `2020 Rank`, State, `2020`, `2002`, `Growth`)


teachers_table <- rbind(teachers_table_us, teachers_table_states)


teachers_table <- teachers_table |>
    # Round values
    mutate(`2020` = round(`2020`, 0)) |>
    mutate(`2002` = round(`2002`, 0)) |>
    mutate(`Growth` = round(`Growth`, 3))


# Write csv
write_csv(teachers_table, "output_data/body/enrollment_staffing_trends/teachers_table.csv")



# Table 8:  Average Teacher Salary Growth (2002-2020)

salary <- read_csv("input_data/salary_data.csv")

salary_pct <- salary |>
    filter(Year != 2021) |>
    filter(State != "District of Columbia") |>
    group_by(State) |>
    mutate(`Salary Adj` = `Salary` * last(CPI) / CPI) |>
    mutate(`Average Salary` = `Salary Adj`)

salary_pct <- salary_pct |>
    filter(Year == 2020) |>
    select(State, `Average Salary`) |>
    left_join(
        salary |>
            filter(Year == 2002) |>
            mutate(`Average Salary` = `Salary Adj`) |>
            select(State, `Average Salary`),
        by = "State"
    ) |>
    mutate(`Average Salary 2020` = `Average Salary.x`) |>
    mutate(`Average Salary 2002` = `Average Salary.y`) |>
    mutate(
        `Percent Change` = `Average Salary 2020` / `Average Salary 2002` - 1
    ) |>
    select(State, `Average Salary 2020`, `Average Salary 2002`, `Percent Change`) |>
    arrange(desc(`Percent Change`))


# Remove the United States row, add a rank column, then add back the United States row to the top of the table

salary_pct_states <- salary_pct |>
    as.data.frame() |>
    filter(State != "United States") |>
    arrange(desc(`Percent Change`)) |>
    mutate(`Growth Rank` = row_number()) |>
    arrange(desc(`Average Salary 2020`)) |>
    mutate(`2020 Rank` = row_number()) |>
    rename(
        `2020` = `Average Salary 2020`,
        `2002` = `Average Salary 2002`,
        `Growth` = `Percent Change`
    ) |>
    select(`Growth Rank`, `2020 Rank`, State, `2020`, `2002`, `Growth`) |>
    arrange(desc(`Growth`))


salary_pct_us <- salary_pct |>
    as.data.frame() |>
    filter(State == "United States") |>
    mutate(
        `Growth Rank` = " ",
        `2020 Rank` = " "
    ) |>
    rename(
        `2020` = `Average Salary 2020`,
        `2002` = `Average Salary 2002`,
        `Growth` = `Percent Change`
    ) |>
    select(`Growth Rank`, `2020 Rank`, State, `2020`, `2002`, `Growth`)


salary_pct <- rbind(salary_pct_us, salary_pct_states)


salary_pct <- salary_pct |>
    # Round values
    mutate(`2020` = round(`2020`, 0)) |>
    mutate(`2002` = round(`2002`, 0)) |>
    mutate(`Growth` = round(`Growth`, 3))


# Write csv
write_csv(salary_pct, "output_data/body/enrollment_staffing_trends/salary_pct.csv")


# NAEP Scores

naep_math_4 <- read_csv("input_data/raw_naep/naep_4_math_ts.csv")
naep_math_8 <- read_csv("input_data/raw_naep/naep_8_math_ts.csv")
naep_reading_4 <- read_csv("input_data/raw_naep/naep_4_reading_ts.csv")
naep_reading_8 <- read_csv("input_data/raw_naep/naep_8_reading_ts.csv")

str(naep_math_4)

# Create a table for 4th Grade NAEP Reading Score Growth (2003-2019)

naep_reading_4_table <- naep_reading_4 |>
    filter(Year == 2019) |>
    filter(State != "District of Columbia") |>
    filter(State != "DoDEA") |>
    filter(State != "Puerto Rico") |>
    select(State, `NAEP`) |>
    left_join(
        naep_reading_4 |>
            filter(Year == 2003) |>
            select(State, NAEP),
        by = "State"
    ) |>
    mutate(`Reading Score Diff` = `NAEP.x` - `NAEP.y`) |>
    select(State, `NAEP.x`, `NAEP.y`, `Reading Score Diff`) |>
    rename(`Reading Score 2019` = `NAEP.x`, `Reading Score 2003` = `NAEP.y`) |>
    arrange(desc(`Reading Score Diff`))

# Remove United States, calculate 2019 rank, "Reading Score Pct" rank, then add back the United States at the top
naep_reading_4_table_states <- naep_reading_4_table |>
    filter(State != "United States") |>
    mutate(`Growth Rank` = rank(-`Reading Score Diff`)) |>
    mutate(`2019 Rank` = rank(-`Reading Score 2019`)) |>
    mutate(`Reading Score 2019` = round(`Reading Score 2019`, 0)) |>
    mutate(`Reading Score 2003` = round(`Reading Score 2003`, 0)) |>
    rename(
        `2019` = `Reading Score 2019`,
        `2003` = `Reading Score 2003`,
        `Growth` = `Reading Score Diff`
    ) |>
    select(
        `Growth Rank`,
        `2019 Rank`,
        State,
        `2003`,
        `2019`,
        `Growth`
    )

naep_reading_4_table_us <- naep_reading_4_table |>
    filter(State == "United States") |>
    mutate(
        `Growth Rank` = " ",
        `2019 Rank` = " "
    ) |>
    mutate(`2019` = round(`Reading Score 2019`, 0)) |>
    mutate(`2003` = round(`Reading Score 2003`, 0)) |>
    rename(
        `Growth` = `Reading Score Diff`
    ) |>
    select(
        `Growth Rank`,
        `2019 Rank`,
        State,
        `2003`,
        `2019`,
        `Growth`
    )

naep_reading_4_table <- rbind(naep_reading_4_table_us, naep_reading_4_table_states)


naep_reading_4_table <- naep_reading_4_table |>
    mutate(Growth = round(Growth, 0))


# Write csv
write_csv(naep_reading_4_table, "output_data/body/student_outcomes/naep_reading_4_table.csv")


# Create a table for 8th Grade NAEP Reading Score Growth (2003-2019)

naep_reading_8_table <- naep_reading_8 |>
    filter(Year == 2019) |>
    filter(State != "District of Columbia") |>
    filter(State != "DoDEA") |>
    filter(State != "Puerto Rico") |>
    select(State, `NAEP`) |>
    left_join(
        naep_reading_8 |>
            filter(Year == 2003) |>
            select(State, NAEP),
        by = "State"
    ) |>
    mutate(`Reading Score Diff` = `NAEP.x` - `NAEP.y`) |>
    select(State, `NAEP.x`, `NAEP.y`, `Reading Score Diff`) |>
    rename(`Reading Score 2019` = `NAEP.x`, `Reading Score 2003` = `NAEP.y`) |>
    arrange(desc(`Reading Score Diff`))

# Remove United States, calculate 2019 rank, "Reading Score Pct" rank, then add back the United States at the top

naep_reading_8_table_states <- naep_reading_8_table |>
    filter(State != "United States") |>
    mutate(`Growth Rank` = rank(-`Reading Score Diff`)) |>
    mutate(`2019 Rank` = rank(-`Reading Score 2019`)) |>
    mutate(`Reading Score 2019` = round(`Reading Score 2019`, 0)) |>
    mutate(`Reading Score 2003` = round(`Reading Score 2003`, 0)) |>
    rename(
        `2019` = `Reading Score 2019`,
        `2003` = `Reading Score 2003`,
        `Growth` = `Reading Score Diff`
    ) |>
    select(
        `Growth Rank`,
        `2019 Rank`,
        State,
        `2003`,
        `2019`,
        `Growth`
    )

naep_reading_8_table_us <- naep_reading_8_table |>
    filter(State == "United States") |>
    mutate(
        `Growth Rank` = " ",
        `2019 Rank` = " "
    ) |>
    mutate(`2019` = round(`Reading Score 2019`, 0)) |>
    mutate(`2003` = round(`Reading Score 2003`, 0)) |>
    rename(
        `Growth` = `Reading Score Diff`
    ) |>
    select(
        `Growth Rank`,
        `2019 Rank`,
        State,
        `2003`,
        `2019`,
        `Growth`
    )

naep_reading_8_table <- rbind(naep_reading_8_table_us, naep_reading_8_table_states)


naep_reading_8_table <- naep_reading_8_table |>
    mutate(Growth = round(Growth, 0))


# Write csv
write_csv(naep_reading_8_table, "output_data/body/student_outcomes/naep_reading_8_table.csv")


# Create a table for 4th Grade NAEP Math Score Growth (2003-2019)

naep_math_4_table <- naep_math_4 |>
    filter(Year == 2019) |>
    filter(State != "District of Columbia") |>
    filter(State != "DoDEA") |>
    filter(State != "Puerto Rico") |>
    select(State, `NAEP`) |>
    left_join(
        naep_math_4 |>
            filter(Year == 2003) |>
            select(State, NAEP),
        by = "State"
    ) |>
    mutate(`Math Score Diff` = `NAEP.x` - `NAEP.y`) |>
    select(State, `NAEP.x`, `NAEP.y`, `Math Score Diff`) |>
    rename(`Math Score 2019` = `NAEP.x`, `Math Score 2003` = `NAEP.y`) |>
    arrange(desc(`Math Score Diff`))

# Remove United States, calculate 2019 rank, "Math Score Pct" rank, then add back the United States at the top

naep_math_4_table_states <- naep_math_4_table |>
    filter(State != "United States") |>
    mutate(`Growth Rank` = rank(-`Math Score Diff`)) |>
    mutate(`2019 Rank` = rank(-`Math Score 2019`)) |>
    mutate(`Math Score 2019` = round(`Math Score 2019`, 0)) |>
    mutate(`Math Score 2003` = round(`Math Score 2003`, 0)) |>
    rename(
        `2019` = `Math Score 2019`,
        `2003` = `Math Score 2003`,
        `Growth` = `Math Score Diff`
    ) |>
    select(
        `Growth Rank`,
        `2019 Rank`,
        State,
        `2003`,
        `2019`,
        `Growth`
    )

naep_math_4_table_us <- naep_math_4_table |>
    filter(State == "United States") |>
    mutate(
        `Growth Rank` = " ",
        `2019 Rank` = " "
    ) |>
    mutate(`2019` = round(`Math Score 2019`, 0)) |>
    mutate(`2003` = round(`Math Score 2003`, 0)) |>
    rename(
        `Growth` = `Math Score Diff`
    ) |>
    select(
        `Growth Rank`,
        `2019 Rank`,
        State,
        `2003`,
        `2019`,
        `Growth`
    )


naep_math_4_table <- rbind(naep_math_4_table_us, naep_math_4_table_states)


naep_math_4_table <- naep_math_4_table |>
    mutate(Growth = round(Growth, 0))


# Write csv
write_csv(naep_math_4_table, "output_data/body/student_outcomes/naep_math_4_table.csv")


# Create a table for 8th Grade NAEP Math Score Growth (2003-2019)

naep_math_8_table <- naep_math_8 |>
    filter(Year == 2019) |>
    filter(State != "District of Columbia") |>
    filter(State != "DoDEA") |>
    filter(State != "Puerto Rico") |>
    select(State, `NAEP`) |>
    left_join(
        naep_math_8 |>
            filter(Year == 2003) |>
            select(State, NAEP),
        by = "State"
    ) |>
    mutate(`Math Score Diff` = `NAEP.x` - `NAEP.y`) |>
    select(State, `NAEP.x`, `NAEP.y`, `Math Score Diff`) |>
    rename(`Math Score 2019` = `NAEP.x`, `Math Score 2003` = `NAEP.y`) |>
    arrange(desc(`Math Score Diff`))


# Remove United States, calculate 2019 rank, "Math Score Pct" rank, then add back the United States at the top

naep_math_8_table_states <- naep_math_8_table |>
    filter(State != "United States") |>
    mutate(`Growth Rank` = rank(-`Math Score Diff`)) |>
    mutate(`2019 Rank` = rank(-`Math Score 2019`)) |>
    mutate(`Math Score 2019` = round(`Math Score 2019`, 0)) |>
    mutate(`Math Score 2003` = round(`Math Score 2003`, 0)) |>
    rename(
        `2019` = `Math Score 2019`,
        `2003` = `Math Score 2003`,
        `Growth` = `Math Score Diff`
    ) |>
    select(
        `Growth Rank`,
        `2019 Rank`,
        State,
        `2003`,
        `2019`,
        `Growth`
    )

naep_math_8_table_us <- naep_math_8_table |>
    filter(State == "United States") |>
    mutate(
        `Growth Rank` = " ",
        `2019 Rank` = " "
    ) |>
    mutate(`2019` = round(`Math Score 2019`, 0)) |>
    mutate(`2003` = round(`Math Score 2003`, 0)) |>
    rename(
        `Growth` = `Math Score Diff`
    ) |>
    select(
        `Growth Rank`,
        `2019 Rank`,
        State,
        `2003`,
        `2019`,
        `Growth`
    )


naep_math_8_table <- rbind(naep_math_8_table_us, naep_math_8_table_states)


naep_math_8_table <- naep_math_8_table |>
    mutate(Growth = round(Growth, 0))


# Write csv
write_csv(naep_math_8_table, "output_data/body/student_outcomes/naep_math_8_table.csv")




# Low Income NAEP 4th Grade Reading Score Growth (2003-2019)

# Load data
low_income_naep_math_4 <- read_csv("input_data/raw_naep/naep_4_math_low_income_ts.csv")
low_income_naep_reading_4 <- read_csv("input_data/raw_naep/naep_4_reading_low_income_ts.csv")
low_income_naep_math_8 <- read_csv("input_data/raw_naep/naep_8_math_low_income_ts.csv")
low_income_naep_reading_8 <- read_csv("input_data/raw_naep/naep_8_reading_low_income_ts.csv")

# Create a table for 4th Grade NAEP Reading Score Growth (2003-2019)
low_income_naep_reading_4 <- low_income_naep_reading_4 |>
    filter(State != "DoDEA") |>
    mutate(Eligible = as.numeric(NAEP))

low_income_naep_reading_4_table <- low_income_naep_reading_4 |>
    filter(Year == 2019) |>
    filter(State != "District of Columbia") |>
    filter(State != "Puerto Rico") |>
    select(State, `Eligible`) |>
    left_join(
        low_income_naep_reading_4 |>
            filter(Year == 2003) |>
            select(State, Eligible),
        by = "State"
    ) |>
    mutate(`Reading Score Diff` = `Eligible.x` - `Eligible.y`) |>
    select(State, `Eligible.x`, `Eligible.y`, `Reading Score Diff`) |>
    rename(`Reading Score 2019` = `Eligible.x`, `Reading Score 2003` = `Eligible.y`) |>
    arrange(desc(`Reading Score Diff`))


# Remove United States, calculate 2019 rank, "Reading Score Pct" rank, then add back the United States at the top
low_income_naep_reading_4_table_states <- low_income_naep_reading_4_table |>
    filter(State != "United States") |>
    mutate(`Growth Rank` = rank(-`Reading Score Diff`)) |>
    mutate(`2019 Rank` = rank(-`Reading Score 2019`)) |>
    mutate(`Reading Score 2019` = round(`Reading Score 2019`, 0)) |>
    mutate(`Reading Score 2003` = round(`Reading Score 2003`, 0)) |>
    rename(
        `2019` = `Reading Score 2019`,
        `2003` = `Reading Score 2003`,
        `Growth` = `Reading Score Diff`
    ) |>
    select(
        `Growth Rank`,
        `2019 Rank`,
        State,
        `2003`,
        `2019`,
        `Growth`
    )

low_income_naep_reading_4_table_us <- low_income_naep_reading_4_table |>
    filter(State == "United States") |>
    mutate(
        `Growth Rank` = " ",
        `2019 Rank` = " "
    ) |>
    mutate(`2019` = round(`Reading Score 2019`, 0)) |>
    mutate(`2003` = round(`Reading Score 2003`, 0)) |>
    rename(
        `Growth` = `Reading Score Diff`
    ) |>
    select(
        `Growth Rank`,
        `2019 Rank`,
        State,
        `2003`,
        `2019`,
        `Growth`
    )


low_income_naep_reading_4_table <- rbind(low_income_naep_reading_4_table_us, low_income_naep_reading_4_table_states)


low_income_naep_reading_4_table <- low_income_naep_reading_4_table |>
    mutate(Growth = round(Growth, 0))


# Write csv
write_csv(low_income_naep_reading_4_table, "output_data/body/student_outcomes/low_income_naep_reading_4_table.csv")


# Create a table for 4th Grade NAEP Math Score Growth (2003-2019)

low_income_naep_math_4 <- low_income_naep_math_4 |>
    filter(State != "DoDEA") |>
    mutate(Eligible = as.numeric(NAEP))

low_income_naep_math_4_table <- low_income_naep_math_4 |>
    filter(Year == 2019) |>
    filter(State != "District of Columbia") |>
    filter(State != "Puerto Rico") |>
    select(State, `Eligible`) |>
    left_join(
        low_income_naep_math_4 |>
            filter(Year == 2003) |>
            select(State, Eligible),
        by = "State"
    ) |>
    mutate(`Math Score Diff` = `Eligible.x` - `Eligible.y`) |>
    select(State, `Eligible.x`, `Eligible.y`, `Math Score Diff`) |>
    rename(`Math Score 2019` = `Eligible.x`, `Math Score 2003` = `Eligible.y`) |>
    arrange(desc(`Math Score Diff`))


# Remove United States, calculate 2019 rank, "Reading Score Pct" rank, then add back the United States at the top

low_income_naep_math_4_table_states <- low_income_naep_math_4_table |>
    filter(State != "United States") |>
    mutate(`Growth Rank` = rank(-`Math Score Diff`)) |>
    mutate(`2019 Rank` = rank(-`Math Score 2019`)) |>
    mutate(`Math Score 2019` = round(`Math Score 2019`, 0)) |>
    mutate(`Math Score 2003` = round(`Math Score 2003`, 0)) |>
    rename(
        `2019` = `Math Score 2019`,
        `2003` = `Math Score 2003`,
        `Growth` = `Math Score Diff`
    ) |>
    select(
        `Growth Rank`,
        `2019 Rank`,
        State,
        `2003`,
        `2019`,
        `Growth`
    )


low_income_naep_math_4_table_us <- low_income_naep_math_4_table |>
    filter(State == "United States") |>
    mutate(
        `Growth Rank` = " ",
        `2019 Rank` = " "
    ) |>
    mutate(`2019` = round(`Math Score 2019`, 0)) |>
    mutate(`2003` = round(`Math Score 2003`, 0)) |>
    rename(
        `Growth` = `Math Score Diff`
    ) |>
    select(
        `Growth Rank`,
        `2019 Rank`,
        State,
        `2003`,
        `2019`,
        `Growth`
    )


low_income_naep_math_4_table <- rbind(low_income_naep_math_4_table_us, low_income_naep_math_4_table_states)


low_income_naep_math_4_table <- low_income_naep_math_4_table |>
    mutate(Growth = round(Growth, 0))


# Write csv
write_csv(low_income_naep_math_4_table, "output_data/body/student_outcomes/low_income_naep_math_4_table.csv")



# Create a table for 8th Grade NAEP Reading Score Growth (2003-2019)

low_income_naep_reading_8 <- low_income_naep_reading_8 |>
    filter(State != "DoDEA") |>
    mutate(Eligible = as.numeric(NAEP))

low_income_naep_reading_8_table <- low_income_naep_reading_8 |>
    filter(Year == 2019) |>
    filter(State != "District of Columbia") |>
    filter(State != "Puerto Rico") |>
    select(State, `Eligible`) |>
    left_join(
        low_income_naep_reading_8 |>
            filter(Year == 2003) |>
            select(State, Eligible),
        by = "State"
    ) |>
    mutate(`Reading Score Diff` = `Eligible.x` - `Eligible.y`) |>
    select(State, `Eligible.x`, `Eligible.y`, `Reading Score Diff`) |>
    rename(`Reading Score 2019` = `Eligible.x`, `Reading Score 2003` = `Eligible.y`) |>
    arrange(desc(`Reading Score Diff`))


# Remove United States, calculate 2019 rank, "Reading Score Pct" rank, then add back the United States at the top

low_income_naep_reading_8_table_states <- low_income_naep_reading_8_table |>
    filter(State != "United States") |>
    mutate(`Growth Rank` = rank(-`Reading Score Diff`)) |>
    mutate(`2019 Rank` = rank(-`Reading Score 2019`)) |>
    mutate(`Reading Score 2019` = round(`Reading Score 2019`, 0)) |>
    mutate(`Reading Score 2003` = round(`Reading Score 2003`, 0)) |>
    rename(
        `2019` = `Reading Score 2019`,
        `2003` = `Reading Score 2003`,
        `Growth` = `Reading Score Diff`
    ) |>
    select(
        `Growth Rank`,
        `2019 Rank`,
        State,
        `2003`,
        `2019`,
        `Growth`
    )


low_income_naep_reading_8_table_us <- low_income_naep_reading_8_table |>
    filter(State == "United States") |>
    mutate(
        `Growth Rank` = " ",
        `2019 Rank` = " "
    ) |>
    mutate(`2019` = round(`Reading Score 2019`, 0)) |>
    mutate(`2003` = round(`Reading Score 2003`, 0)) |>
    rename(
        `Growth` = `Reading Score Diff`
    ) |>
    select(
        `Growth Rank`,
        `2019 Rank`,
        State,
        `2003`,
        `2019`,
        `Growth`
    )


low_income_naep_reading_8_table <- rbind(low_income_naep_reading_8_table_us, low_income_naep_reading_8_table_states)


low_income_naep_reading_8_table <- low_income_naep_reading_8_table |>
    mutate(Growth = round(Growth, 0))


# Write csv
write_csv(low_income_naep_reading_8_table, "output_data/body/student_outcomes/low_income_naep_reading_8_table.csv")


# Create a table for 8th Grade NAEP Math Score Growth (2003-2019)

low_income_naep_math_8 <- low_income_naep_math_8 |>
    filter(State != "DoDEA") |>
    mutate(Eligible = as.numeric(NAEP))

low_income_naep_math_8_table <- low_income_naep_math_8 |>
    filter(Year == 2019) |>
    filter(State != "District of Columbia") |>
    filter(State != "Puerto Rico") |>
    select(State, `Eligible`) |>
    left_join(
        low_income_naep_math_8 |>
            filter(Year == 2003) |>
            select(State, Eligible),
        by = "State"
    ) |>
    mutate(`Math Score Diff` = `Eligible.x` - `Eligible.y`) |>
    select(State, `Eligible.x`, `Eligible.y`, `Math Score Diff`) |>
    rename(`Math Score 2019` = `Eligible.x`, `Math Score 2003` = `Eligible.y`) |>
    arrange(desc(`Math Score Diff`))


# Remove United States, calculate 2019 rank, "Math Score Pct" rank, then add back the United States at the top

low_income_naep_math_8_table_states <- low_income_naep_math_8_table |>
    filter(State != "United States") |>
    mutate(`Growth Rank` = rank(-`Math Score Diff`)) |>
    mutate(`2019 Rank` = rank(-`Math Score 2019`)) |>
    mutate(`Math Score 2019` = round(`Math Score 2019`, 0)) |>
    mutate(`Math Score 2003` = round(`Math Score 2003`, 0)) |>
    rename(
        `2019` = `Math Score 2019`,
        `2003` = `Math Score 2003`,
        `Growth` = `Math Score Diff`
    ) |>
    select(
        `Growth Rank`,
        `2019 Rank`,
        State,
        `2003`,
        `2019`,
        `Growth`
    )


low_income_naep_math_8_table_us <- low_income_naep_math_8_table |>
    filter(State == "United States") |>
    mutate(
        `Growth Rank` = " ",
        `2019 Rank` = " "
    ) |>
    mutate(`2019` = round(`Math Score 2019`, 0)) |>
    mutate(`2003` = round(`Math Score 2003`, 0)) |>
    rename(
        `Growth` = `Math Score Diff`
    ) |>
    select(
        `Growth Rank`,
        `2019 Rank`,
        State,
        `2003`,
        `2019`,
        `Growth`
    )


low_income_naep_math_8_table <- rbind(low_income_naep_math_8_table_us, low_income_naep_math_8_table_states)


low_income_naep_math_8_table <- low_income_naep_math_8_table |>
    mutate(Growth = round(Growth, 0))


# Write csv
write_csv(low_income_naep_math_8_table, "output_data/body/student_outcomes/low_income_naep_math_8_table.csv")



##################################################
############### TEXT FOR THE BODY ################
##################################################

# Pull "United States" and get the 2020 `Total Revenue - Per Pupil` and 2002 `Total Revenue - Per Pupil`
us_2020 <- ss_data_cpi |>
    filter(State == "United States") |>
    filter(Year == 2020) |>
    select(`Total Revenue - Per Pupil`)

us_2002 <- ss_data_cpi |>
    filter(State == "United States") |>
    filter(Year == 2002) |>
    select(`Total Revenue - Per Pupil`)

us_2020
us_2002

# Pull "United States" and get the 2020 `Total Benefits - Per Pupil` and 2002 `Total Benefits - Per Pupil`
us_2020_benefits <- ss_data_cpi |>
    filter(State == "United States") |>
    filter(Year == 2020) |>
    select(`Total Benefits - Per Pupil`)

us_2002_benefits <- ss_data_cpi |>
    filter(State == "United States") |>
    filter(Year == 2002) |>
    select(`Total Benefits - Per Pupil`)

# Calculate the difference between us_2020_benefits and us_2002_benefits
us_2020_benefits[1, 2] - us_2002_benefits[1, 2]
us_2020_benefits[1, 2] / us_2002_benefits[1, 2] - 1

# Enrollment

# Pull "United States" and get the 2020 `Enrollment` and 2002 `Enrollment`
us_2020_enrollment <- ss_data_cpi |>
    filter(State == "United States") |>
    filter(Year == 2020) |>
    select(`Enrollment`)

us_2002_enrollment <- ss_data_cpi |>
    filter(State == "United States") |>
    filter(Year == 2002) |>
    select(`Enrollment`)

# Calculate the difference between us_2020_enrollment and us_2002_enrollment
us_2020_enrollment[1, 2] - us_2002_enrollment[1, 2]

# Calculate the percent change between us_2020_enrollment and us_2002_enrollment
us_2020_enrollment[1, 2] / us_2002_enrollment[1, 2] - 1

# Get `All staff` for 2020 and 2002 from teachers_non_teachers
teachers_non_teachers_2020 <- staffing |>
    filter(State == "United States") |>
    filter(Year == 2020) |>
    select(`All staff`)

teachers_non_teachers_2002 <- staffing |>
    filter(State == "United States") |>
    filter(Year == 2002) |>
    select(`All staff`)

# Calculate the difference between teachers_non_teachers_2020 and teachers_non_teachers_2002
teachers_non_teachers_2020[1, 2] - teachers_non_teachers_2002[1, 2]

# Calculate the percent change between teachers_non_teachers_2020 and teachers_non_teachers_2002
teachers_non_teachers_2020[1, 2] / teachers_non_teachers_2002[1, 2] - 1

# Get Non-Teachers from `All staff` - `Teachers` for 2020 and 2002 from staffing
non_teachers_2020 <- staffing |>
    filter(State == "United States") |>
    filter(Year == 2020) |>
    select(`All staff`, `Teachers`) |>
    mutate(`Non-Teachers` = `All staff` - `Teachers`)

non_teachers_2002 <- staffing |>
    filter(State == "United States") |>
    filter(Year == 2002) |>
    select(`All staff`, `Teachers`) |>
    mutate(`Non-Teachers` = `All staff` - `Teachers`)

# Calculate the difference between non_teachers_2020 and non_teachers_2002
non_teachers_2020[1, 3] - non_teachers_2002[1, 3]

(non_teachers_2020[1, 3] - non_teachers_2002[1, 3]) / (teachers_non_teachers_2020[1, 2] - teachers_non_teachers_2002[1, 2])


#  Get average salary for teachers in the "United States" for 2020 and 2002
teachers_salary_2020 <- salary_pct |>
    filter(State == "United States")




# Key Trend #1

# Count the number of rows in rev_table that are greater than 0
rev_table |>
    filter(State != "United States") |>
    filter(Growth > 0) |>
    count()

rev_table |>
    filter(State != "United States") |>
    filter(Growth > 0.5) |>
    count()

rev_table |>
    filter(State != "United States") |>
    filter(Growth > 0.5)


# Get the `Federal Revenue - Per Pupil`, `State Revenue - Per Pupil`, `Local Revenue - Per Pupil`, `Total Revenue - Per Pupil` for 2020 and 2002 for the "United States"
us_2020_rev <- ss_data_cpi |>
    filter(State == "United States") |>
    filter(Year == 2020) |>
    select(`Federal Revenue - Per Pupil`, `State Revenue - Per Pupil`, `Local Revenue - Per Pupil`, `Total Revenue - Per Pupil`)

us_2002_rev <- ss_data_cpi |>
    filter(State == "United States") |>
    filter(Year == 2002) |>
    select(`Federal Revenue - Per Pupil`, `State Revenue - Per Pupil`, `Local Revenue - Per Pupil`, `Total Revenue - Per Pupil`)

# Calculate the difference between us_2020_rev$`Federal Revenue - Per Pupil` and us_2002_rev$`Federal Revenue - Per Pupil`
us_2020_rev$`Federal Revenue - Per Pupil` - us_2002_rev$`Federal Revenue - Per Pupil`

# Calculate the percent change between us_2020_rev$`Federal Revenue - Per Pupil` and us_2002_rev$`Federal Revenue - Per Pupil`
us_2020_rev$`Federal Revenue - Per Pupil` / us_2002_rev$`Federal Revenue - Per Pupil` - 1

# Calculate the difference between us_2020_rev$`State Revenue - Per Pupil` and us_2002_rev$`State Revenue - Per Pupil`
us_2020_rev$`State Revenue - Per Pupil` - us_2002_rev$`State Revenue - Per Pupil`

# Calculate the percent change between us_2020_rev$`State Revenue - Per Pupil` and us_2002_rev$`State Revenue - Per Pupil`
us_2020_rev$`State Revenue - Per Pupil` / us_2002_rev$`State Revenue - Per Pupil` - 1

# Calculate the difference between us_2020_rev$`Local Revenue - Per Pupil` and us_2002_rev$`Local Revenue - Per Pupil`
us_2020_rev$`Local Revenue - Per Pupil` - us_2002_rev$`Local Revenue - Per Pupil`

# Calculate the percent change between us_2020_rev$`Local Revenue - Per Pupil` and us_2002_rev$`Local Revenue - Per Pupil`
us_2020_rev$`Local Revenue - Per Pupil` / us_2002_rev$`Local Revenue - Per Pupil` - 1


rev_table |>
    filter(State != "United States") |>
    filter(`2020` > 20e3)



# Key Trend #2

# Get the `Total Revenue - Per Pupil` for 2020 and 2002 for the "United States"

us_2020_rev <- ss_data_cpi |>
    filter(State == "United States") |>
    filter(Year == 2020) |>
    select(`Total Revenue - Per Pupil`)

us_2002_rev <- ss_data_cpi |>
    filter(State == "United States") |>
    filter(Year == 2002) |>
    select(`Total Revenue - Per Pupil`)

# Calculate the percent difference between us_2020_rev$`Total Revenue - Per Pupil` and us_2002_rev$`Total Revenue - Per Pupil`
us_2020_rev$`Total Revenue - Per Pupil` / us_2002_rev$`Total Revenue - Per Pupil` - 1


# Get `Salary Adj` for 2020 and 2002 for the "United States" from salary_pct
us_2020_salary <- salary_pct |>
    filter(State == "United States") |>
    filter(Year == 2020) |>
    select(`Salary Adj`)

us_2002_salary <- salary_pct |>
    filter(State == "United States") |>
    filter(Year == 2002) |>
    select(`Salary Adj`)

# Calculate the percent difference between us_2020_salary$`Salary Adj` and us_2002_salary$`Salary Adj`
us_2020_salary$`Salary Adj` / us_2002_salary$`Salary Adj` - 1


# Pull "United States" and get the 2020 `Enrollment` and 2002 `Enrollment`
us_2020_enrollment <- ss_data_cpi |>
    filter(State == "United States") |>
    filter(Year == 2020) |>
    select(`Enrollment`)

us_2002_enrollment <- ss_data_cpi |>
    filter(State == "United States") |>
    filter(Year == 2002) |>
    select(`Enrollment`)


# Calculate the percent change between us_2020_enrollment and us_2002_enrollment
us_2020_enrollment[1, 2] / us_2002_enrollment[1, 2] - 1



# Key Trend #3

# Staffing / Enrollment Changes

staff_greater_enrollment <- enrollment_trends |>
    left_join(staffing_trends, by = "State") |>
    arrange(`Enrollment Growth`) |>
    select(State, `Enrollment 2020`, `Enrollment 2002`, `Enrollment Growth`, `Total Staff Growth`, `Non-Teachers Growth`, `Teachers Growth`) |>
    mutate_at(vars(`Enrollment Growth`, `Teachers Growth`, `Non-Teachers Growth`, `Total Staff Growth`), round, 3) |>
    select(State, `Enrollment 2002`, `Enrollment 2020`, `Enrollment Growth`, `Total Staff Growth`, `Non-Teachers Growth`, `Teachers Growth`) |>
    filter(State != "United States") |>
    mutate(`Staff_Greater_Enrollment` = ifelse(`Total Staff Growth` > `Enrollment Growth`, 1, 0)) |>
    # Get the sum of `Staff_Greater_Enrollment`
    as.data.frame() |>
    summarise(`Staff_Greater_Enrollment` = sum(`Staff_Greater_Enrollment`))

staff_greater_enrollment


non_teachers_growth <- enrollment_trends |>
    left_join(staffing_trends, by = "State") |>
    arrange(`Enrollment Growth`) |>
    select(State, `Enrollment 2020`, `Enrollment 2002`, `Enrollment Growth`, `Total Staff Growth`, `Non-Teachers Growth`, `Teachers Growth`) |>
    mutate_at(vars(`Enrollment Growth`, `Teachers Growth`, `Non-Teachers Growth`, `Total Staff Growth`), round, 3) |>
    select(State, `Enrollment 2002`, `Enrollment 2020`, `Enrollment Growth`, `Total Staff Growth`, `Non-Teachers Growth`, `Teachers Growth`) |>
    filter(State != "United States")



# Load Complete US Staffing Data

complete_staffing <- read_csv("input_data/complete_staffing.csv")

# Calculate `Other support services staff ` as a percent of non-teachers
complete_staffing_total <- complete_staffing |>
    as.data.frame() |>
    filter(Category != Teachers) |>
    summarise(
        `2002` = sum(`2002`),
        `2020` = sum(`2020`)
    )


# Get `Other support services staff` from Category

other_support_services <- complete_staffing |>
    filter(Category == "Other support services staff") |>
    select(`2002`, `2020`)

# Get `Instructional aids` from Category
instructional_aids <- complete_staffing |>
    filter(Category == "Instructional aides") |>
    select(`2002`, `2020`)

# Calculate the percent of `Other support services staff` from  `Total Non-Teachers`

(other_support_services$`2020` + instructional_aids$`2020`) / complete_staffing_total$`2020`


complete_staffing_table <- complete_staffing |>
    mutate(growth = `2020` / `2002` - 1) |>
    mutate(`2020 pct` = `2020` / complete_staffing_total$`2020`)




# Enrollment, Staffing Trends

enrollment_staffing_trends |>
    as.data.frame() |>
    mutate(`Total Staff Growth Count` = ifelse(`Total Staff Growth` > 0, 1, 0)) |>
    summarise(
        `Total Staff Growth Count` = sum(`Total Staff Growth Count`)
    )




# Key Trend #4


employee_benefits_table <- ss_data_cpi |>
    filter(Year == 2020) |>
    select(State, `Total Benefits - Per Pupil`) |>
    left_join(
        ss_data_cpi |>
            filter(Year == 2002) |>
            select(State, `Total Benefits - Per Pupil`),
        by = "State"
    ) |>
    mutate(`Total Benefits - Per Pupil 2020` = `Total Benefits - Per Pupil.x`) |>
    mutate(`Total Benefits - Per Pupil 2002` = `Total Benefits - Per Pupil.y`) |>
    mutate(
        `Percent Change` = `Total Benefits - Per Pupil 2020` / `Total Benefits - Per Pupil 2002` - 1
    ) |>
    select(State, `Total Benefits - Per Pupil 2020`, `Total Benefits - Per Pupil 2002`, `Percent Change`) |>
    arrange(desc(`Percent Change`))


# Remove the United States row, add a rank column, then add back the United States row to the top of the table

employee_benefits_table_states <- employee_benefits_table |>
    as.data.frame() |>
    filter(State != "United States") |>
    arrange(desc(`Percent Change`)) |>
    mutate(`Growth Rank` = row_number()) |>
    arrange(desc(`Total Benefits - Per Pupil 2020`)) |>
    mutate(`2020 Rank` = row_number()) |>
    rename(
        `2020` = `Total Benefits - Per Pupil 2020`,
        `2002` = `Total Benefits - Per Pupil 2002`,
        `Growth` = `Percent Change`
    ) |>
    select(`Growth Rank`, `2020 Rank`, State, `2020`, `2002`, `Growth`) |>
    arrange(desc(`Growth`))


employee_benefits_table_us <- employee_benefits_table |>
    as.data.frame() |>
    filter(State == "United States") |>
    mutate(
        `Growth Rank` = " ",
        `2020 Rank` = " "
    ) |>
    rename(
        `2020` = `Total Benefits - Per Pupil 2020`,
        `2002` = `Total Benefits - Per Pupil 2002`,
        `Growth` = `Percent Change`
    ) |>
    select(`Growth Rank`, `2020 Rank`, State, `2020`, `2002`, `Growth`)


employee_benefits_table <- rbind(employee_benefits_table_us, employee_benefits_table_states)


employee_benefits_table <- employee_benefits_table |>
    # Round values
    mutate(`Growth` = round(`Growth`, 3))


employee_benefits_table |>
    filter(State == "United States")

# Calculate the the difference between 2020 and 2002

employee_benefits_table$`2020` - employee_benefits_table$`2002`



# Key Trend #5

intro_table_6


rev_table_ii <- ss_data_cpi |>
    filter(Year == 2020) |>
    select(State, `Total Revenue - Per Pupil`) |>
    left_join(
        ss_data_cpi |>
            filter(Year == 2002) |>
            select(State, `Total Revenue - Per Pupil`) |>
            mutate(
                `Total Revenue - Per Pupil` = `Total Revenue - Per Pupil`
            ),
        by = "State"
    ) |>
    mutate(`Total Revenue - Per Pupil 2020` = `Total Revenue - Per Pupil.x`) |>
    mutate(`Total Revenue - Per Pupil 2002` = `Total Revenue - Per Pupil.y`) |>
    mutate(
        `Percent Change` = `Total Revenue - Per Pupil 2020` / `Total Revenue - Per Pupil 2002` - 1
    ) |>
    select(State, `Total Revenue - Per Pupil 2020`, `Total Revenue - Per Pupil 2002`, `Percent Change`) |>
    filter(State == "United States")

rev_table_ii$`Total Revenue - Per Pupil 2020` - rev_table_ii$`Total Revenue - Per Pupil 2002`

rev_table_count <- ss_data_cpi |>
    filter(Year == 2020) |>
    select(State, `Total Revenue - Per Pupil`) |>
    left_join(
        ss_data_cpi |>
            filter(Year == 2002) |>
            select(State, `Total Revenue - Per Pupil`) |>
            mutate(
                `Total Revenue - Per Pupil` = `Total Revenue - Per Pupil`
            ),
        by = "State"
    ) |>
    mutate(`Total Revenue - Per Pupil 2020` = `Total Revenue - Per Pupil.x`) |>
    mutate(`Total Revenue - Per Pupil 2002` = `Total Revenue - Per Pupil.y`) |>
    mutate(
        `Percent Change` = `Total Revenue - Per Pupil 2020` / `Total Revenue - Per Pupil 2002` - 1
    ) |>
    select(State, `Total Revenue - Per Pupil 2020`, `Total Revenue - Per Pupil 2002`, `Percent Change`) |>
    mutate(greater_than_10pct = ifelse(`Percent Change` >= 0.1, 1, 0)) |>
    as.data.frame() |>
    summarise(
        `Number of States` = sum(greater_than_10pct)
    )


ss_data_cpi |>
    filter(Year == 2020) |>
    select(State, `Total Revenue - Per Pupil`) |>
    left_join(
        ss_data_cpi |>
            filter(Year == 2002) |>
            select(State, `Total Revenue - Per Pupil`) |>
            mutate(
                `Total Revenue - Per Pupil` = `Total Revenue - Per Pupil`
            ),
        by = "State"
    ) |>
    mutate(`Total Revenue - Per Pupil 2020` = `Total Revenue - Per Pupil.x`) |>
    mutate(`Total Revenue - Per Pupil 2002` = `Total Revenue - Per Pupil.y`) |>
    mutate(
        `Percent Change` = `Total Revenue - Per Pupil 2020` / `Total Revenue - Per Pupil 2002` - 1
    ) |>
    select(State, `Total Revenue - Per Pupil 2020`, `Total Revenue - Per Pupil 2002`, `Percent Change`) |>
    mutate(greater_than_50pct = ifelse(`Percent Change` > 0.5, 1, 0)) |>
    filter(greater_than_50pct == 1)


ss_data_cpi |>
    filter(Year == 2020) |>
    select(State, `Total Revenue - Per Pupil`) |>
    left_join(
        ss_data_cpi |>
            filter(Year == 2002) |>
            select(State, `Total Revenue - Per Pupil`) |>
            mutate(
                `Total Revenue - Per Pupil` = `Total Revenue - Per Pupil`
            ),
        by = "State"
    ) |>
    mutate(`Total Revenue - Per Pupil 2020` = `Total Revenue - Per Pupil.x`) |>
    mutate(`Total Revenue - Per Pupil 2002` = `Total Revenue - Per Pupil.y`) |>
    mutate(
        `Percent Change` = `Total Revenue - Per Pupil 2020` / `Total Revenue - Per Pupil 2002` - 1
    ) |>
    select(State, `Total Revenue - Per Pupil 2020`, `Total Revenue - Per Pupil 2002`, `Percent Change`) |>
    filter(`Total Revenue - Per Pupil 2020` > 20e3) |>
    arrange(desc(`Total Revenue - Per Pupil 2020`))


ss_data_cpi |>
    filter(Year == 2020) |>
    select(State, `Total Revenue - Per Pupil`) |>
    left_join(
        ss_data_cpi |>
            filter(Year == 2002) |>
            select(State, `Total Revenue - Per Pupil`) |>
            mutate(
                `Total Revenue - Per Pupil` = `Total Revenue - Per Pupil`
            ),
        by = "State"
    ) |>
    mutate(`Total Revenue - Per Pupil 2020` = `Total Revenue - Per Pupil.x`) |>
    mutate(`Total Revenue - Per Pupil 2002` = `Total Revenue - Per Pupil.y`) |>
    mutate(
        `Percent Change` = `Total Revenue - Per Pupil 2020` / `Total Revenue - Per Pupil 2002` - 1
    ) |>
    select(State, `Total Revenue - Per Pupil 2020`, `Total Revenue - Per Pupil 2002`, `Percent Change`) |>
    arrange(`Total Revenue - Per Pupil 2020`)



#   Support Services Expenditures
# Get `Support Services - Pupil Support Services - Per Pupil`,
# `Support Services - Instructional Staff - Per Pupil`,
# `Support Services - General Administration - Per Pupil`,
# `Support Services - School Administration - Per Pupil`,
# `Support Services - Operation & Maintenance - Per Pupil`,
# `Support Services - Pupil Transportation - Per Pupil`, and
# `Support Services - Other - Per Pupil` for 2002 and 2020
# for the United States from ss_data_cpi


support_services_us <- ss_data_cpi |>
    filter(Year == 2020) |>
    filter(State == "United States") |>
    select(
        State,
        `Support Services - Pupil Support Services - Per Pupil`,
        `Support Services - Instructional Staff - Per Pupil`,
        `Support Services - General Administration - Per Pupil`,
        `Support Services - School Administration - Per Pupil`,
        `Support Services - Operation & Maintenance - Per Pupil`,
        `Support Services - Pupil Transportation - Per Pupil`,
        `Support Services - Other - Per Pupil`
    ) |>
    mutate(`Total` = `Support Services - Pupil Support Services - Per Pupil` +
        `Support Services - Instructional Staff - Per Pupil` +
        `Support Services - General Administration - Per Pupil` +
        `Support Services - School Administration - Per Pupil` +
        `Support Services - Operation & Maintenance - Per Pupil` +
        `Support Services - Pupil Transportation - Per Pupil` +
        `Support Services - Other - Per Pupil`) |>
    left_join(
        ss_data_cpi |>
            filter(Year == 2002) |>
            filter(State == "United States") |>
            select(
                State,
                `Support Services - Pupil Support Services - Per Pupil`,
                `Support Services - Instructional Staff - Per Pupil`,
                `Support Services - General Administration - Per Pupil`,
                `Support Services - School Administration - Per Pupil`,
                `Support Services - Operation & Maintenance - Per Pupil`,
                `Support Services - Pupil Transportation - Per Pupil`,
                `Support Services - Other - Per Pupil`
            ) |>
            mutate(`Total` = `Support Services - Pupil Support Services - Per Pupil` +
                `Support Services - Instructional Staff - Per Pupil` +
                `Support Services - General Administration - Per Pupil` +
                `Support Services - School Administration - Per Pupil` +
                `Support Services - Operation & Maintenance - Per Pupil` +
                `Support Services - Pupil Transportation - Per Pupil` +
                `Support Services - Other - Per Pupil`),
        by = "State"
    )


support_services_us_pct <- support_services_us |>
    mutate(`Total Growth` = `Total.x` / `Total.y` - 1) |>
    mutate(`Pupil Support Services Growth` = `Support Services - Pupil Support Services - Per Pupil.x` / `Support Services - Pupil Support Services - Per Pupil.y` - 1) |>
    mutate(`Instructional Staff Growth` = `Support Services - Instructional Staff - Per Pupil.x` / `Support Services - Instructional Staff - Per Pupil.y` - 1) |>
    mutate(`General Administration Growth` = `Support Services - General Administration - Per Pupil.x` / `Support Services - General Administration - Per Pupil.y` - 1) |>
    mutate(`School Administration Growth` = `Support Services - School Administration - Per Pupil.x` / `Support Services - School Administration - Per Pupil.y` - 1) |>
    mutate(`Operation & Maintenance Growth` = `Support Services - Operation & Maintenance - Per Pupil.x` / `Support Services - Operation & Maintenance - Per Pupil.y` - 1) |>
    mutate(`Pupil Transportation Growth` = `Support Services - Pupil Transportation - Per Pupil.x` / `Support Services - Pupil Transportation - Per Pupil.y` - 1) |>
    mutate(`Other Growth` = `Support Services - Other - Per Pupil.x` / `Support Services - Other - Per Pupil.y` - 1) |>
    select(
        State,
        `Total Growth`,
        `Pupil Support Services Growth`,
        `Instructional Staff Growth`,
        `General Administration Growth`,
        `School Administration Growth`,
        `Operation & Maintenance Growth`,
        `Pupil Transportation Growth`,
        `Other Growth`
    )


support_serivces_us_diff <- support_services_us |>
    mutate(`Total Diff` = `Total.x` - `Total.y`) |>
    mutate(`Pupil Support Services Diff` = `Support Services - Pupil Support Services - Per Pupil.x` - `Support Services - Pupil Support Services - Per Pupil.y`) |>
    mutate(`Instructional Staff Diff` = `Support Services - Instructional Staff - Per Pupil.x` - `Support Services - Instructional Staff - Per Pupil.y`) |>
    mutate(`General Administration Diff` = `Support Services - General Administration - Per Pupil.x` - `Support Services - General Administration - Per Pupil.y`) |>
    mutate(`School Administration Diff` = `Support Services - School Administration - Per Pupil.x` - `Support Services - School Administration - Per Pupil.y`) |>
    mutate(`Operation & Maintenance Diff` = `Support Services - Operation & Maintenance - Per Pupil.x` - `Support Services - Operation & Maintenance - Per Pupil.y`) |>
    mutate(`Pupil Transportation Diff` = `Support Services - Pupil Transportation - Per Pupil.x` - `Support Services - Pupil Transportation - Per Pupil.y`) |>
    mutate(`Other Diff` = `Support Services - Other - Per Pupil.x` - `Support Services - Other - Per Pupil.y`) |>
    select(
        State,
        `Total Diff`,
        `Pupil Support Services Diff`,
        `Instructional Staff Diff`,
        `General Administration Diff`,
        `School Administration Diff`,
        `Operation & Maintenance Diff`,
        `Pupil Transportation Diff`,
        `Other Diff`
    )


round(0.2535084, 3)

support_services_us_pct |>
  t()

ss_data_cpi |>
    filter(Year == 2020) |>
    select(
        State,
        `Support Services - Pupil Support Services - Per Pupil`,
        `Support Services - Instructional Staff - Per Pupil`,
        `Support Services - General Administration - Per Pupil`,
        `Support Services - School Administration - Per Pupil`,
        `Support Services - Operation & Maintenance - Per Pupil`,
        `Support Services - Pupil Transportation - Per Pupil`,
        `Support Services - Other - Per Pupil`
    ) |>
    mutate(`Total` = `Support Services - Pupil Support Services - Per Pupil` +
        `Support Services - Instructional Staff - Per Pupil` +
        `Support Services - General Administration - Per Pupil` +
        `Support Services - School Administration - Per Pupil` +
        `Support Services - Operation & Maintenance - Per Pupil` +
        `Support Services - Pupil Transportation - Per Pupil` +
        `Support Services - Other - Per Pupil`) |>
    left_join(
        ss_data_cpi |>
            filter(Year == 2002) |>
            select(
                State,
                `Support Services - Pupil Support Services - Per Pupil`,
                `Support Services - Instructional Staff - Per Pupil`,
                `Support Services - General Administration - Per Pupil`,
                `Support Services - School Administration - Per Pupil`,
                `Support Services - Operation & Maintenance - Per Pupil`,
                `Support Services - Pupil Transportation - Per Pupil`,
                `Support Services - Other - Per Pupil`
            ) |>
            mutate(`Total` = `Support Services - Pupil Support Services - Per Pupil` +
                `Support Services - Instructional Staff - Per Pupil` +
                `Support Services - General Administration - Per Pupil` +
                `Support Services - School Administration - Per Pupil` +
                `Support Services - Operation & Maintenance - Per Pupil` +
                `Support Services - Pupil Transportation - Per Pupil` +
                `Support Services - Other - Per Pupil`),
        by = "State"
    ) |>
    mutate(`Total Growth` = `Total.x` / `Total.y` - 1) |>
    filter(`Total Growth` >= 0.5)


ss_data_cpi |>
    filter(Year == 2020) |>
    select(
        State,
        `Support Services - Pupil Support Services - Per Pupil`,
        `Support Services - Instructional Staff - Per Pupil`,
        `Support Services - General Administration - Per Pupil`,
        `Support Services - School Administration - Per Pupil`,
        `Support Services - Operation & Maintenance - Per Pupil`,
        `Support Services - Pupil Transportation - Per Pupil`,
        `Support Services - Other - Per Pupil`
    ) |>
    mutate(`Total` = `Support Services - Pupil Support Services - Per Pupil` +
        `Support Services - Instructional Staff - Per Pupil` +
        `Support Services - General Administration - Per Pupil` +
        `Support Services - School Administration - Per Pupil` +
        `Support Services - Operation & Maintenance - Per Pupil` +
        `Support Services - Pupil Transportation - Per Pupil` +
        `Support Services - Other - Per Pupil`) |>
    left_join(
        ss_data_cpi |>
            filter(Year == 2002) |>
            select(
                State,
                `Support Services - Pupil Support Services - Per Pupil`,
                `Support Services - Instructional Staff - Per Pupil`,
                `Support Services - General Administration - Per Pupil`,
                `Support Services - School Administration - Per Pupil`,
                `Support Services - Operation & Maintenance - Per Pupil`,
                `Support Services - Pupil Transportation - Per Pupil`,
                `Support Services - Other - Per Pupil`
            ) |>
            mutate(`Total` = `Support Services - Pupil Support Services - Per Pupil` +
                `Support Services - Instructional Staff - Per Pupil` +
                `Support Services - General Administration - Per Pupil` +
                `Support Services - School Administration - Per Pupil` +
                `Support Services - Operation & Maintenance - Per Pupil` +
                `Support Services - Pupil Transportation - Per Pupil` +
                `Support Services - Other - Per Pupil`),
        by = "State"
    ) |>
    mutate(`Total Growth` = `Total.x` / `Total.y` - 1) |>
    filter(`Total Growth` >= 0.6)


ss_data_cpi |>
    filter(Year == 2020) |>
    select(
        State,
        `Support Services - Pupil Support Services - Per Pupil`,
        `Support Services - Instructional Staff - Per Pupil`,
        `Support Services - General Administration - Per Pupil`,
        `Support Services - School Administration - Per Pupil`,
        `Support Services - Operation & Maintenance - Per Pupil`,
        `Support Services - Pupil Transportation - Per Pupil`,
        `Support Services - Other - Per Pupil`
    ) |>
    mutate(`Total` = `Support Services - Pupil Support Services - Per Pupil` +
        `Support Services - Instructional Staff - Per Pupil` +
        `Support Services - General Administration - Per Pupil` +
        `Support Services - School Administration - Per Pupil` +
        `Support Services - Operation & Maintenance - Per Pupil` +
        `Support Services - Pupil Transportation - Per Pupil` +
        `Support Services - Other - Per Pupil`) |>
    left_join(
        ss_data_cpi |>
            filter(Year == 2002) |>
            select(
                State,
                `Support Services - Pupil Support Services - Per Pupil`,
                `Support Services - Instructional Staff - Per Pupil`,
                `Support Services - General Administration - Per Pupil`,
                `Support Services - School Administration - Per Pupil`,
                `Support Services - Operation & Maintenance - Per Pupil`,
                `Support Services - Pupil Transportation - Per Pupil`,
                `Support Services - Other - Per Pupil`
            ) |>
            mutate(`Total` = `Support Services - Pupil Support Services - Per Pupil` +
                `Support Services - Instructional Staff - Per Pupil` +
                `Support Services - General Administration - Per Pupil` +
                `Support Services - School Administration - Per Pupil` +
                `Support Services - Operation & Maintenance - Per Pupil` +
                `Support Services - Pupil Transportation - Per Pupil` +
                `Support Services - Other - Per Pupil`),
        by = "State"
    ) |>
    mutate(`Total Growth` = `Total.x` / `Total.y` - 1) |>
    filter(`Total Growth` <= 0.1)




ss_data_cpi |>
    filter(Year == 2020) |>
    select(
        State,
        `Support Services - Pupil Support Services - Per Pupil`,
        `Support Services - Instructional Staff - Per Pupil`,
        `Support Services - General Administration - Per Pupil`,
        `Support Services - School Administration - Per Pupil`,
        `Support Services - Operation & Maintenance - Per Pupil`,
        `Support Services - Pupil Transportation - Per Pupil`,
        `Support Services - Other - Per Pupil`
    ) |>
    mutate(`Total` = `Support Services - Pupil Support Services - Per Pupil` +
        `Support Services - Instructional Staff - Per Pupil` +
        `Support Services - General Administration - Per Pupil` +
        `Support Services - School Administration - Per Pupil` +
        `Support Services - Operation & Maintenance - Per Pupil` +
        `Support Services - Pupil Transportation - Per Pupil` +
        `Support Services - Other - Per Pupil`) |>
    left_join(
        ss_data_cpi |>
            filter(Year == 2002) |>
            select(
                State,
                `Support Services - Pupil Support Services - Per Pupil`,
                `Support Services - Instructional Staff - Per Pupil`,
                `Support Services - General Administration - Per Pupil`,
                `Support Services - School Administration - Per Pupil`,
                `Support Services - Operation & Maintenance - Per Pupil`,
                `Support Services - Pupil Transportation - Per Pupil`,
                `Support Services - Other - Per Pupil`
            ) |>
            mutate(`Total` = `Support Services - Pupil Support Services - Per Pupil` +
                `Support Services - Instructional Staff - Per Pupil` +
                `Support Services - General Administration - Per Pupil` +
                `Support Services - School Administration - Per Pupil` +
                `Support Services - Operation & Maintenance - Per Pupil` +
                `Support Services - Pupil Transportation - Per Pupil` +
                `Support Services - Other - Per Pupil`),
        by = "State"
    ) |>
    mutate(`Total Growth` = `Total.x` / `Total.y` - 1) |>
    filter(`Total Growth` <= 0)



support_services_us_pct |>
    t()


support_services_states <- ss_data_cpi |>
    filter(Year == 2020) |>
    select(
        State,
        `Support Services - Pupil Support Services - Per Pupil`,
        `Support Services - Instructional Staff - Per Pupil`,
        `Support Services - General Administration - Per Pupil`,
        `Support Services - School Administration - Per Pupil`,
        `Support Services - Operation & Maintenance - Per Pupil`,
        `Support Services - Pupil Transportation - Per Pupil`,
        `Support Services - Other - Per Pupil`
    ) |>
    mutate(`Total` = `Support Services - Pupil Support Services - Per Pupil` +
        `Support Services - Instructional Staff - Per Pupil` +
        `Support Services - General Administration - Per Pupil` +
        `Support Services - School Administration - Per Pupil` +
        `Support Services - Operation & Maintenance - Per Pupil` +
        `Support Services - Pupil Transportation - Per Pupil` +
        `Support Services - Other - Per Pupil`) |>
    left_join(
        ss_data_cpi |>
            filter(Year == 2002) |>
            select(
                State,
                `Support Services - Pupil Support Services - Per Pupil`,
                `Support Services - Instructional Staff - Per Pupil`,
                `Support Services - General Administration - Per Pupil`,
                `Support Services - School Administration - Per Pupil`,
                `Support Services - Operation & Maintenance - Per Pupil`,
                `Support Services - Pupil Transportation - Per Pupil`,
                `Support Services - Other - Per Pupil`
            ) |>
            mutate(`Total` = `Support Services - Pupil Support Services - Per Pupil` +
                `Support Services - Instructional Staff - Per Pupil` +
                `Support Services - General Administration - Per Pupil` +
                `Support Services - School Administration - Per Pupil` +
                `Support Services - Operation & Maintenance - Per Pupil` +
                `Support Services - Pupil Transportation - Per Pupil` +
                `Support Services - Other - Per Pupil`),
        by = "State"
    ) |>
    mutate(`Total Growth` = `Total.x` / `Total.y` - 1) |>
    mutate(`Pupil Support Services Growth` = `Support Services - Pupil Support Services - Per Pupil.x` / `Support Services - Pupil Support Services - Per Pupil.y` - 1) |>
    mutate(`Instructional Staff Growth` = `Support Services - Instructional Staff - Per Pupil.x` / `Support Services - Instructional Staff - Per Pupil.y` - 1) |>
    mutate(`General Administration Growth` = `Support Services - General Administration - Per Pupil.x` / `Support Services - General Administration - Per Pupil.y` - 1) |>
    mutate(`School Administration Growth` = `Support Services - School Administration - Per Pupil.x` / `Support Services - School Administration - Per Pupil.y` - 1) |>
    mutate(`Operation & Maintenance Growth` = `Support Services - Operation & Maintenance - Per Pupil.x` / `Support Services - Operation & Maintenance - Per Pupil.y` - 1) |>
    mutate(`Pupil Transportation Growth` = `Support Services - Pupil Transportation - Per Pupil.x` / `Support Services - Pupil Transportation - Per Pupil.y` - 1) |>
    mutate(`Other Growth` = `Support Services - Other - Per Pupil.x` / `Support Services - Other - Per Pupil.y` - 1) |>
    mutate(`Total Diff` = `Total.x` - `Total.y`) |>
    mutate(`Pupil Support Services Diff` = `Support Services - Pupil Support Services - Per Pupil.x` - `Support Services - Pupil Support Services - Per Pupil.y`) |>
    mutate(`Instructional Staff Diff` = `Support Services - Instructional Staff - Per Pupil.x` - `Support Services - Instructional Staff - Per Pupil.y`) |>
    mutate(`General Administration Diff` = `Support Services - General Administration - Per Pupil.x` - `Support Services - General Administration - Per Pupil.y`) |>
    mutate(`School Administration Diff` = `Support Services - School Administration - Per Pupil.x` - `Support Services - School Administration - Per Pupil.y`) |>
    mutate(`Operation & Maintenance Diff` = `Support Services - Operation & Maintenance - Per Pupil.x` - `Support Services - Operation & Maintenance - Per Pupil.y`) |>
    mutate(`Pupil Transportation Diff` = `Support Services - Pupil Transportation - Per Pupil.x` - `Support Services - Pupil Transportation - Per Pupil.y`) |>
    mutate(`Other Diff` = `Support Services - Other - Per Pupil.x` - `Support Services - Other - Per Pupil.y`) |>
    # 2020 values
    mutate(`Total 2020` = `Total.x`) |>
    mutate(`Pupil Support Services 2020` = `Support Services - Pupil Support Services - Per Pupil.x`) |>
    mutate(`Instructional Staff 2020` = `Support Services - Instructional Staff - Per Pupil.x`) |>
    mutate(`General Administration 2020` = `Support Services - General Administration - Per Pupil.x`) |>
    mutate(`School Administration 2020` = `Support Services - School Administration - Per Pupil.x`) |>
    mutate(`Operation & Maintenance 2020` = `Support Services - Operation & Maintenance - Per Pupil.x`) |>
    mutate(`Pupil Transportation 2020` = `Support Services - Pupil Transportation - Per Pupil.x`) |>
    mutate(`Other 2020` = `Support Services - Other - Per Pupil.x`) |>
    select(
        State,
        `Total 2020`,
        `Pupil Support Services 2020`,
        `Instructional Staff 2020`,
        `General Administration 2020`,
        `School Administration 2020`,
        `Operation & Maintenance 2020`,
        `Pupil Transportation 2020`,
        `Other 2020`,
        `Total Growth`,
        `Pupil Support Services Growth`,
        `Instructional Staff Growth`,
        `General Administration Growth`,
        `School Administration Growth`,
        `Operation & Maintenance Growth`,
        `Pupil Transportation Growth`,
        `Other Growth`,
        `Total Diff`,
        `Pupil Support Services Diff`,
        `Instructional Staff Diff`,
        `General Administration Diff`,
        `School Administration Diff`,
        `Operation & Maintenance Diff`,
        `Pupil Transportation Diff`,
        `Other Diff`
    )


support_services_pupil_support_services <- support_services_states |>
    arrange(desc(`Pupil Support Services 2020`))



# Get `All Instruction - Per Pupil` data from ss_data_cpi for 2002 and 2020

instructional_states <- ss_data_cpi |>
    filter(Year == 2020) |>
    select(
        State,
        `All Instruction - Per Pupil`
    ) |>
    left_join(
        ss_data_cpi |>
            filter(Year == 2002) |>
            select(
                State,
                `All Instruction - Per Pupil`
            ),
        by = "State"
    ) |>
    rename(`Instructional 2020` = `All Instruction - Per Pupil.x`) |>
    rename(`Instructional 2002` = `All Instruction - Per Pupil.y`) |>
    mutate(`Instructional Growth` = `Instructional 2020` / `Instructional 2002` - 1)


# Get `Instructional Growth` data from instructional_states for 2002 and 2020

instructional_states_us <- instructional_states |>
    filter(State == "United States")



# Employee Benefits

employee_benefits_table_us <- employee_benefits_table |>
    filter(State == "United States")


employee_benefits_table_us$`2020` - employee_benefits_table_us$`2002`

employee_benefits_table_us


employee_benefits_table |>
    filter(State != "United States") |>
    filter(Growth > 1)


employee_benefits_table |>
    filter(Growth < 0.2)


# Capital Outlay

capital_outlay_table_us <- capital_outlay_table |>
    filter(State == "United States")

capital_outlay_table_us$`2020` - capital_outlay_table_us$`2002`

capital_outlay_table_us$Growth


# Total Debt

total_debt_table_us <- total_debt_table |>
    filter(State == "United States")

total_debt_table_us$`2020` - total_debt_table_us$`2002`

total_debt_table_us$Growth

total_debt_table |>
    filter(Growth > 2)



# Enrollment

enrollment_table_us <- enrollment_table |>
    filter(State == "United States")

declining_enrollment <- enrollment_table |>
    filter(State != "United States") |>
    filter(Growth < 0)

# Sum 2020 enrollment for California, Florida, and Texas

declining_enrollment |>
    filter(State == "California" | State == "Florida" | State == "Texas") |>
    group_by(State) |>
    summarise(`2020 Enrollment` = sum(`2020`))




# Complete Staffing

complete_staffing_list <- complete_staffing |>
    as.data.frame() |>
    # pivot wider
    mutate(
        `Growth` = round(`2020` / `2002` - 1, 3)
    )


# Staffing

staffing_trends_states <- staffing_trends |>
    select(State, `Non-Teachers Growth`)

staffing_trends_states_25pct <- staffing_trends_states |>
    mutate(`Non-Teachers Growth Count` = ifelse(`Non-Teachers Growth` > 0.25, 1, 0))

staffing_trends_states_25pct |>
    summarise(
        `Non-Teachers Growth Count` = sum(`Non-Teachers Growth Count`)
    )


staffing_trends |>
    as.data.frame() |>
    filter(State != "United States") |>
    summarise(
        `Non-Teachers 2020` = sum(`Non-Teachers 2020`)
    )


staffing_trends |>
    as.data.frame() |>
    filter(State == "United States")


staffing_trends |>
    filter(State == "United States") |>
    select(State, `Teachers 2020`, `Teachers Growth`)


teacher_reductions <- staffing_trends |>
    filter(State != "United States") |>
    filter(`Teachers Growth` < 0) |>
    filter(`Non-Teachers Growth` < 0)




# Get the percentage of non-teachers from `All staff` from the United States in 2020

staffing_trends |>
    filter(State == "United States") |>
    select(`Non-Teachers 2020`, `All staff 2020`) |>
    mutate(`Non-Teachers %` = `Non-Teachers 2020` / `All staff 2020` * 100) |>
    select(`Non-Teachers %`)



# Average Teacher Salary Growth

salary_table_us <- salary_table |>
    filter(State == "United States")


salary_delcine_states <- salary_table |>
    filter(State != "United States") |>
    filter(`Percent Change` < 0) |>
    arrange(`Percent Change`)


salary_table |>
    arrange(desc(`Percent Change`))



# 4th Grade Reading NAEP Scores
naep_reading_4_states <- naep_reading_4 |>
    filter(Year == 2019) |>
    # filter(State != "United States") |>
    select(State, `NAEP`) |>
    left_join(
        naep_reading_4 |>
            filter(Year == 2003) |>
            select(State, NAEP),
        by = "State"
    ) |>
    mutate(`Reading 4 Score Pct` = `NAEP.x` / `NAEP.y` - 1) |>
    mutate(`Reading 4 Score Diff` = `NAEP.x` - `NAEP.y`) |>
    select(State, `NAEP.x`, `NAEP.y`, `Reading 4 Score Pct`, `Reading 4 Score Diff`) |>
    rename(`Reading Score 2019` = `NAEP.x`, `Reading Score 2003` = `NAEP.y`)

# 4th Grade Math NAEP Scores
naep_math_4_states <- naep_math_4 |>
    filter(Year == 2019) |>
    # filter(State != "United States") |>
    select(State, `NAEP`) |>
    left_join(
        naep_math_4 |>
            filter(Year == 2003) |>
            select(State, NAEP),
        by = "State"
    ) |>
    mutate(`Math 4 Score Pct` = `NAEP.x` / `NAEP.y` - 1) |>
    mutate(`Math 4 Score Diff` = `NAEP.x` - `NAEP.y`) |>
    select(State, `NAEP.x`, `NAEP.y`, `Math 4 Score Pct`, `Math 4 Score Diff`) |>
    rename(`Math Score 2019` = `NAEP.x`, `Math Score 2003` = `NAEP.y`)


# 8th Grade Reading NAEP Scores
naep_reading_8_states <- naep_reading_8 |>
    filter(Year == 2019) |>
    # filter(State != "United States") |>
    select(State, `NAEP`) |>
    left_join(
        naep_reading_8 |>
            filter(Year == 2003) |>
            select(State, NAEP),
        by = "State"
    ) |>
    mutate(`Reading 8 Score Pct` = `NAEP.x` / `NAEP.y` - 1) |>
    mutate(`Reading 8 Score Diff` = `NAEP.x` - `NAEP.y`) |>
    select(State, `NAEP.x`, `NAEP.y`, `Reading 8 Score Pct`, `Reading 8 Score Diff`) |>
    rename(`Reading Score 2019` = `NAEP.x`, `Reading Score 2003` = `NAEP.y`)

# 8th Grade Math NAEP Scores
naep_math_8_states <- naep_math_8 |>
    filter(Year == 2019) |>
    # filter(State != "United States") |>
    select(State, `NAEP`) |>
    left_join(
        naep_math_8 |>
            filter(Year == 2003) |>
            select(State, NAEP),
        by = "State"
    ) |>
    mutate(`Math 8 Score Pct` = `NAEP.x` / `NAEP.y` - 1) |>
    mutate(`Math 8 Score Diff` = `NAEP.x` - `NAEP.y`) |>
    select(State, `NAEP.x`, `NAEP.y`, `Math 8 Score Pct`, `Math 8 Score Diff`) |>
    rename(`Math Score 2019` = `NAEP.x`, `Math Score 2003` = `NAEP.y`)



# 4th Grade Low Income Reading NAEP Scores
li_naep_reading_4_states <- low_income_naep_reading_4 |>
    filter(Year == 2019) |>
    filter(State != "District of Columbia") |>
    filter(State != "Puerto Rico") |>
    select(State, `Eligible`) |>
    left_join(
        low_income_naep_reading_4 |>
            filter(Year == 2003) |>
            select(State, Eligible),
        by = "State"
    ) |>
    mutate(`Reading Score Diff` = `Eligible.x` - `Eligible.y`) |>
    select(State, `Eligible.x`, `Eligible.y`, `Reading Score Diff`) |>
    rename(`Reading Score 2019` = `Eligible.x`, `Reading Score 2003` = `Eligible.y`) |>
    arrange(desc(`Reading Score Diff`))



# 4th Grade Low Inocme Math NAEP Scores
li_naep_math_4_states <- low_income_naep_math_4 |>
    filter(Year == 2019) |>
    filter(State != "District of Columbia") |>
    filter(State != "Puerto Rico") |>
    select(State, `Eligible`) |>
    left_join(
        low_income_naep_math_4 |>
            filter(Year == 2003) |>
            select(State, Eligible),
        by = "State"
    ) |>
    mutate(`Math Score Diff` = `Eligible.x` - `Eligible.y`) |>
    select(State, `Eligible.x`, `Eligible.y`, `Math Score Diff`) |>
    rename(`Math Score 2019` = `Eligible.x`, `Math Score 2003` = `Eligible.y`) |>
    arrange(desc(`Math Score Diff`))



# 8th Grade Low Income Reading NAEP Scores
li_naep_reading_8_states <- low_income_naep_reading_8 |>
    filter(Year == 2019) |>
    filter(State != "District of Columbia") |>
    filter(State != "Puerto Rico") |>
    select(State, `Eligible`) |>
    left_join(
        low_income_naep_reading_8 |>
            filter(Year == 2003) |>
            select(State, Eligible),
        by = "State"
    ) |>
    mutate(`Reading Score Diff` = `Eligible.x` - `Eligible.y`) |>
    select(State, `Eligible.x`, `Eligible.y`, `Reading Score Diff`) |>
    rename(`Reading Score 2019` = `Eligible.x`, `Reading Score 2003` = `Eligible.y`) |>
    arrange(desc(`Reading Score Diff`))


# 8th Grade Low Income Math NAEP Scores
li_naep_math_8_states <- low_income_naep_math_8 |>
    filter(Year == 2019) |>
    filter(State != "District of Columbia") |>
    filter(State != "Puerto Rico") |>
    select(State, `Eligible`) |>
    left_join(
        low_income_naep_math_8 |>
            filter(Year == 2003) |>
            select(State, Eligible),
        by = "State"
    ) |>
    mutate(`Math Score Diff` = `Eligible.x` - `Eligible.y`) |>
    select(State, `Eligible.x`, `Eligible.y`, `Math Score Diff`) |>
    rename(`Math Score 2019` = `Eligible.x`, `Math Score 2003` = `Eligible.y`) |>
    arrange(desc(`Math Score Diff`))
